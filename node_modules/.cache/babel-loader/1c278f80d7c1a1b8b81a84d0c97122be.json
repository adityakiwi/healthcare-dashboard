{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/ParallelCoordinates.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport * as d3l from 'd3-svg-legend';\n\nclass ParallelCoordinatesChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.removeExistingBars = this.removeExistingBars.bind(this);\n    this.createBarChart = this.createBarChart.bind(this);\n    this.state = {\n      svg: null\n    };\n  }\n\n  componentDidMount() {\n    const owidth = this.props.size[0];\n    const oheight = this.props.size[1];\n    var margin = {\n      top: 20,\n      right: 20,\n      bottom: 70,\n      left: 100\n    },\n        width = owidth - margin.left - margin.right,\n        height = oheight - margin.top - margin.bottom;\n    const svg = d3.select(\"body\").select(\"#pc\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    this.setState({\n      svg\n    });\n  }\n\n  componentDidUpdate() {\n    this.removeExistingBars();\n    this.createBarChart();\n  }\n\n  midpoint(range) {\n    return range[0] + (range[1] - range[0]) / 2.0;\n  }\n\n  removeExistingBars() {\n    const {\n      svg\n    } = this.state;\n    svg.selectAll(\"*\").remove();\n  }\n\n  createBarChart() {\n    const {\n      svg\n    } = this.state;\n    const dataset = this.props.data;\n    const owidth = this.props.size[0];\n    const oheight = this.props.size[1];\n    var margin = {\n      top: 20,\n      right: 20,\n      bottom: 70,\n      left: 100\n    },\n        width = owidth - margin.left - margin.right,\n        height = oheight - margin.top - margin.bottom;\n    console.log(\"graphdata\", dataset);\n    var dimensions = [\"Government\", \"Medicaid\", \"Medicare\", \"Private\", \"Self Pay\"]; // var dval = dataset[0].values.map(function (d) { return d.distribution; });\n    // var dig = dataset[0].values.map(function (d) { return d.value; });\n    // console.log(\"diagnoses\", dimensions)\n    // console.log(\"distribution\", dval)\n    // console.log(\"value\", dig)\n\n    var color = d3.scaleOrdinal().domain([\"English\", \"Non-English\", \"Male\", \"Female\"]).range([\"#D73F47\", \"#3381E1\", \"#ED7A22\", \"#65A9A3\"]);\n    let y = {};\n\n    for (var i in dimensions) {\n      let name = dimensions[i];\n      y[name] = d3.scaleLinear().domain(d3.extent(dataset, function (d) {\n        {\n          console.log(d[name]);\n        }\n        return +d[name];\n      })).range([height, 0]); // this basecially defines each of the 4 y axis in a loop based system.\n    } // Build the X scale -> it find the best position for each Y axis\n\n\n    let x = d3.scalePoint().range([0, width]).padding(1).domain(dimensions); // The path function take a row of the csv as input, and return x and y coordinates of the line to draw for this raw.\n\n    function path(d) {\n      return d3.line()(dimensions.map(function (p) {\n        {\n          console.log(\"d\", d);\n        }\n        {\n          console.log(\"p\", p);\n        }\n        {\n          console.log(\"xp\", x(p));\n        }\n        {\n          console.log(\"yp\", y[p]);\n        }\n        {\n          console.log(\"dp\", d[p]);\n        }\n        {\n          console.log(\"ydp\", y[p](d[p]));\n        }\n        return [x(p), y[p](d[p])];\n      }));\n    }\n\n    var legend = d3l.legendColor().scale(color).shape('circle').orient('vertical').shapeRadius(3).labelOffset(1);\n    svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", \"translate(\" + (owidth - 170) + \", \" + 10 + \")\").style(\"font-size\", \"8px\");\n    svg.select(\".legend\").call(legend); // Draw the lines\n\n    svg.selectAll(\"myPath\").data(dataset).enter().append(\"path\").attr(\"class\", function (d) {\n      return \"line \" + d.type;\n    }) // 2 class for each line: 'line' and the group name\n    .attr(\"d\", path).style(\"fill\", \"none\").style(\"stroke\", function (d) {\n      return color(d.type);\n    }).style(\"opacity\", 0.5).on(\"mouseover\", mouseover).on(\"mouseleave\", mouseout); // Draw the axis:\n\n    svg.selectAll(\"myAxis\") // For each dimension of the dataset I add a 'g' element:\n    .data(dimensions).enter().append(\"g\").attr(\"class\", \"axis\") // I translate this element to its right position on the x axis\n    .attr(\"transform\", function (d) {\n      return \"translate(\" + x(d) + \")\";\n    }) // And I build the axis with the call function\n    .each(function (d) {\n      d3.select(this).call(d3.axisLeft().ticks(5).scale(y[d]));\n    }) // Add axis title\n    .append(\"text\").style(\"text-anchor\", \"middle\").attr(\"y\", -9).text(function (d) {\n      return d;\n    }).style(\"fill\", \"black\"); // svg.select(\"#legend\")\n    // svg.append(\"circle\").attr(\"cx\", 10).attr(\"cy\", 130 - 130).attr(\"r\", 6).style(\"fill\", \"#DFB6B7\")\n    // svg.append(\"circle\").attr(\"cx\", 10).attr(\"cy\", 160 - 130).attr(\"r\", 6).style(\"fill\", \"#9dbe74\")\n    // svg.append(\"circle\").attr(\"cx\", 10).attr(\"cy\", 190 - 130).attr(\"r\", 6).style(\"fill\", \"#7ebdba\")\n    // svg.append(\"circle\").attr(\"cx\", 10).attr(\"cy\", 220 - 130).attr(\"r\", 6).style(\"fill\", \"#CBB4DF\")\n    // svg.append(\"text\").attr(\"x\", 20).attr(\"y\", -20).text(\"Length of College\").style(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\")\n    // svg.append(\"text\").attr(\"x\", 20).attr(\"y\", 140 - 140).text(\"Other\").style(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\")\n    // svg.append(\"text\").attr(\"x\", 20).attr(\"y\", 170 - 140).text(\"Four-year\").style(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\")\n    // svg.append(\"text\").attr(\"x\", 20).attr(\"y\", 200 - 140).text(\"Two-Year\").style(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\")\n    // svg.append(\"text\").attr(\"x\", 20).attr(\"y\", 230 - 140).text(\"Less than two year\").style(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\")\n    // const xtitle = svg.append('text')\n    //     .attr('class', 'axis-title')\n    //     .text(\"Age\");\n    // xtitle.attr('text-anchor', 'middle');\n    // xtitle.attr('x', xmid);\n    // xtitle.attr('y', height + 40);\n    // const ytitle = svg.append('text')\n    //     .attr('class', 'axis-title')\n    //     .text('Distribution')\n    // ytitle.attr('x', -240);\n    // ytitle.attr('y', -80);\n    // ytitle.attr('dy', '1.75ex');\n    // ytitle.attr('text-anchor', 'middle');\n    // ytitle.attr('transform', 'rotate(-90)');\n    // const tooltip = d3\n    //     .select('#container')\n    //     .append('div')\n    //     .attr('class', 'tooltip')\n    //     .style('opacity', 0);\n\n    function mouseover(d) {\n      let selected_specie = d.type;\n      console.log(\"highlighted\", d.type); // first every group turns grey\n\n      d3.selectAll(\".line\").transition().duration(200).style(\"stroke\", \"lightgrey\").style(\"opacity\", \"0.2\"); // Second the hovered specie takes its color\n\n      d3.selectAll(\".\" + selected_specie).transition().duration(200).style(\"stroke\", color(selected_specie)).style(\"opacity\", \"1\");\n    }\n\n    function mouseout(d) {\n      d3.selectAll(\".line\").transition().duration(200).delay(1000).style(\"stroke\", function (d) {\n        return color(d.type);\n      }).style(\"opacity\", \"1\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.myRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default ParallelCoordinatesChart;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/ParallelCoordinates.js"],"names":["React","d3","d3l","ParallelCoordinatesChart","Component","constructor","props","removeExistingBars","bind","createBarChart","state","svg","componentDidMount","owidth","size","oheight","margin","top","right","bottom","left","width","height","select","append","attr","setState","componentDidUpdate","midpoint","range","selectAll","remove","dataset","data","console","log","dimensions","color","scaleOrdinal","domain","y","i","name","scaleLinear","extent","d","x","scalePoint","padding","path","line","map","p","legend","legendColor","scale","shape","orient","shapeRadius","labelOffset","style","call","enter","type","on","mouseover","mouseout","each","axisLeft","ticks","text","selected_specie","transition","duration","delay","render","myRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport * as d3l from 'd3-svg-legend'\n\n\nclass ParallelCoordinatesChart extends React.Component {\n    constructor(props) {\n        super(props)\n        this.removeExistingBars = this.removeExistingBars.bind(this);\n        this.createBarChart = this.createBarChart.bind(this)\n        this.state = {\n            svg: null\n        };\n\n    }\n    componentDidMount() {\n        const owidth = this.props.size[0]\n        const oheight = this.props.size[1]\n\n        var margin = { top: 20, right: 20, bottom: 70, left: 100 },\n            width = owidth - margin.left - margin.right,\n            height = oheight - margin.top - margin.bottom;\n\n        const svg = d3.select(\"body\").select(\"#pc\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n        this.setState({ svg });\n    }\n    componentDidUpdate() {\n        this.removeExistingBars();\n        this.createBarChart();\n    }\n\n    midpoint(range) {\n        return range[0] + (range[1] - range[0]) / 2.0;\n    }\n\n    removeExistingBars() {\n        const { svg } = this.state;\n\n        svg.selectAll(\"*\").remove();\n\n    }\n\n    createBarChart() {\n        const { svg } = this.state;\n        const dataset = this.props.data\n        const owidth = this.props.size[0]\n        const oheight = this.props.size[1]\n\n\n        var margin = { top: 20, right: 20, bottom: 70, left: 100 },\n            width = owidth - margin.left - margin.right,\n            height = oheight - margin.top - margin.bottom;\n\n        console.log(\"graphdata\", dataset)\n        var dimensions = [\"Government\", \"Medicaid\", \"Medicare\", \"Private\",\"Self Pay\"]\n\n        // var dval = dataset[0].values.map(function (d) { return d.distribution; });\n        // var dig = dataset[0].values.map(function (d) { return d.value; });\n      \n        // console.log(\"diagnoses\", dimensions)\n        // console.log(\"distribution\", dval)\n        // console.log(\"value\", dig)\n\n        var color = d3.scaleOrdinal()\n            .domain([\"English\", \"Non-English\", \"Male\", \"Female\"])\n            .range([\"#D73F47\", \"#3381E1\", \"#ED7A22\", \"#65A9A3\"])\n\n\n        let y = {}\n        for (var i in dimensions) {\n            let name = dimensions[i]\n            y[name] = d3.scaleLinear()\n                .domain(d3.extent(dataset, function (d) { { console.log(d[name]) } return +d[name]; }))\n                .range([height, 0])\n            // this basecially defines each of the 4 y axis in a loop based system.\n        }\n        // Build the X scale -> it find the best position for each Y axis\n        let x = d3.scalePoint()\n            .range([0, width])\n            .padding(1)\n            .domain(dimensions);\n\n        // The path function take a row of the csv as input, and return x and y coordinates of the line to draw for this raw.\n        function path(d) {\n            return d3.line()(dimensions.map(function (p) { { console.log(\"d\", d) } { console.log(\"p\", p) } { console.log(\"xp\", x(p)) } { console.log(\"yp\", y[p]) } { console.log(\"dp\", (d[p])) } { console.log(\"ydp\", y[p](d[p])) } return [x(p), y[p](d[p])]; }));\n        }\n\n\n\n        var legend = d3l.legendColor()\n            .scale(color)\n            .shape('circle')\n            .orient('vertical')\n            .shapeRadius(3)\n            .labelOffset(1)\n\n        svg.append(\"g\")\n            .attr(\"class\", \"legend\")\n            .attr(\"transform\", \"translate(\" + (owidth - 170) + \", \" + 10 + \")\")\n            .style(\"font-size\", \"8px\")\n\n\n        svg.select(\".legend\")\n            .call(legend);\n\n\n        // Draw the lines\n        svg\n            .selectAll(\"myPath\")\n            .data(dataset)\n            .enter()\n            .append(\"path\")\n            .attr(\"class\", function (d) { return \"line \" + d.type }) // 2 class for each line: 'line' and the group name\n            .attr(\"d\", path)\n            .style(\"fill\", \"none\")\n            .style(\"stroke\", function (d) { return (color(d.type)) })\n            .style(\"opacity\", 0.5)\n            .on(\"mouseover\", mouseover)\n            .on(\"mouseleave\", mouseout)\n\n        // Draw the axis:\n        svg.selectAll(\"myAxis\")\n            // For each dimension of the dataset I add a 'g' element:\n            .data(dimensions).enter()\n            .append(\"g\")\n            .attr(\"class\", \"axis\")\n            // I translate this element to its right position on the x axis\n            .attr(\"transform\", function (d) { return \"translate(\" + x(d) + \")\"; })\n            // And I build the axis with the call function\n            .each(function (d) { d3.select(this).call(d3.axisLeft().ticks(5).scale(y[d])); })\n            // Add axis title\n            .append(\"text\")\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"y\", -9)\n            .text(function (d) { return d; })\n            .style(\"fill\", \"black\")\n\n        // svg.select(\"#legend\")\n        // svg.append(\"circle\").attr(\"cx\", 10).attr(\"cy\", 130 - 130).attr(\"r\", 6).style(\"fill\", \"#DFB6B7\")\n        // svg.append(\"circle\").attr(\"cx\", 10).attr(\"cy\", 160 - 130).attr(\"r\", 6).style(\"fill\", \"#9dbe74\")\n        // svg.append(\"circle\").attr(\"cx\", 10).attr(\"cy\", 190 - 130).attr(\"r\", 6).style(\"fill\", \"#7ebdba\")\n        // svg.append(\"circle\").attr(\"cx\", 10).attr(\"cy\", 220 - 130).attr(\"r\", 6).style(\"fill\", \"#CBB4DF\")\n        // svg.append(\"text\").attr(\"x\", 20).attr(\"y\", -20).text(\"Length of College\").style(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\")\n        // svg.append(\"text\").attr(\"x\", 20).attr(\"y\", 140 - 140).text(\"Other\").style(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\")\n        // svg.append(\"text\").attr(\"x\", 20).attr(\"y\", 170 - 140).text(\"Four-year\").style(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\")\n        // svg.append(\"text\").attr(\"x\", 20).attr(\"y\", 200 - 140).text(\"Two-Year\").style(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\")\n        // svg.append(\"text\").attr(\"x\", 20).attr(\"y\", 230 - 140).text(\"Less than two year\").style(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\")\n\n\n\n        // const xtitle = svg.append('text')\n        //     .attr('class', 'axis-title')\n        //     .text(\"Age\");\n        // xtitle.attr('text-anchor', 'middle');\n        // xtitle.attr('x', xmid);\n        // xtitle.attr('y', height + 40);\n        // const ytitle = svg.append('text')\n        //     .attr('class', 'axis-title')\n        //     .text('Distribution')\n        // ytitle.attr('x', -240);\n        // ytitle.attr('y', -80);\n        // ytitle.attr('dy', '1.75ex');\n        // ytitle.attr('text-anchor', 'middle');\n        // ytitle.attr('transform', 'rotate(-90)');\n\n        // const tooltip = d3\n        //     .select('#container')\n        //     .append('div')\n        //     .attr('class', 'tooltip')\n        //     .style('opacity', 0);\n\n        function mouseover(d) {\n\n            let selected_specie = d.type\n\n            console.log(\"highlighted\", d.type)\n\n            // first every group turns grey\n            d3.selectAll(\".line\")\n                .transition().duration(200)\n                .style(\"stroke\", \"lightgrey\")\n                .style(\"opacity\", \"0.2\")\n            // Second the hovered specie takes its color\n            d3.selectAll(\".\" + selected_specie)\n                .transition().duration(200)\n                .style(\"stroke\", color(selected_specie))\n                .style(\"opacity\", \"1\")\n        }\n\n        function mouseout(d) {\n            d3.selectAll(\".line\")\n                .transition().duration(200).delay(1000)\n                .style(\"stroke\", function (d) { return (color(d.type)) })\n                .style(\"opacity\", \"1\")            \n        }\n\n    }\n\n\n\n    render() {\n        return (\n            <div ref={this.myRef} />\n        )\n    }\n\n}\n\nexport default ParallelCoordinatesChart;\n"]},"metadata":{},"sourceType":"module"}