{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/ScatterPlot.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nlet svg_count = 0;\n\nclass ScatterPlot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.removeExistingBars = this.removeExistingBars.bind(this);\n    this.createBarChart = this.createBarChart.bind(this);\n    this.state = {\n      svg: null,\n      width: null,\n      height: null,\n      margin: null\n    };\n  }\n\n  componentDidMount() {\n    const owidth = this.props.size[0];\n    const oheight = this.props.size[1];\n    var margin = {\n      top: 20,\n      right: 20,\n      bottom: 70,\n      left: 100\n    },\n        width = owidth - margin.left - margin.right,\n        height = oheight - margin.top - margin.bottom;\n    const svg = d3.select(\"body\").select(\"#sp\").select(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    this.setState({\n      svg,\n      width,\n      height,\n      margin\n    });\n  }\n\n  componentDidUpdate() {\n    this.removeExistingBars();\n    this.createBarChart();\n  }\n\n  midpoint(range) {\n    return range[0] + (range[1] - range[0]) / 2.0;\n  }\n\n  removeExistingBars() {\n    const {\n      svg\n    } = this.state;\n    svg.selectAll(\"*\").remove();\n  }\n\n  createBarChart() {\n    const {\n      svg\n    } = this.state;\n    const {\n      div\n    } = this.state;\n    const {\n      width\n    } = this.state;\n    const {\n      height\n    } = this.state;\n    const {\n      margin\n    } = this.state;\n    const dataset = this.props.data;\n    const selector = this.props.selector;\n    console.log(\"data\", dataset);\n    var dval = dataset[selector].values.map(function (d) {\n      return d.age;\n    });\n    var dig = dataset[selector].values.map(function (d) {\n      return d.value;\n    });\n    console.log(\"distribution\", dval);\n    console.log(\"value\", dig);\n    var color = [\"#D73F47\", \"#3381E1\", \"#ED7A22\", \"#65A9A3\"]; // var line2 = d3.line()\n    //     .x(function (d, i) { return xScale(d[0].x); }) // set the x values for the line generator\n    //     .y(function (d) { return yScale(d.y); }) // set the y values for the line generator\n    //     .curve(d3.curveMonotoneX) // apply smoothing to the line\n    // var color = d3.scaleOrdinal(d3.schemeCategory10)\n    // xScale.domain([0, d3.max(dataset, function (key) { return d3.max(key.values, function (d) { return d.distribution; }); })]);\n    // yScale.domain([0, d3.max(dataset, function (key) { return d3.max(key.values, function (d) { return d.value; }); })]);\n    // for (var singlekey = 0; singlekey < 1; singlekey++) {\n\n    let single = Object.values(dataset[selector])[1];\n    console.log(single);\n    console.log(selector); // var line = d3.line()\n    //     .x(function (single) { return xScale(single.age); }) // set the x values for the line generator\n    //     .y(function (single) { return yScale(single.value); }) // set the y values for the line generator\n    //     .curve(d3.curveMonotoneX) // apply smoothing to the line\n    // Add the line\n\n    svg.append(\"path\").datum(single).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      return xScale(d.age);\n    }).y(function (d) {\n      return yScale(d.value);\n    })); // svg.append(\"path\")\n    //     .datum(single)\n    //     .attr(\"class\", \"line\")\n    //     .attr(\"d\", line)\n    //     .style(\"fill\", color[selector])\n    // svg.selectAll(\".dot\")\n    //     .data(single)\n    //     .enter().append(\"circle\")\n    //     .attr(\"class\", \"dot1\")\n    //     .attr(\"cx\", function (d) { return xScale(d.age) })\n    //     .attr(\"cy\", function (d) { return yScale(d.value) })\n    //     .attr(\"transform\", \"translate(40)\")\n    //     .attr(\"r\", 5)\n    //     .style(\"fill\", color[selector])\n    // .style(\"fill\", color(selector))\n    // .on(\"mouseover\", function (a, b, c) {\n    //     console.log(a)\n    //     this.attr('class', 'focus')\n    // })\n    // .on(\"mouseout\", function () { })\n    //       .on(\"mousemove\", mousemove);\n\n    const xmid = xScale.range()[0] + (xScale.range()[1] - xScale.range()[0]) / 2.0;\n    const ymid = yScale.range()[0] + (yScale.range()[1] - yScale.range()[0]) / 2.0;\n    const xtitle = svg.append('text').attr('class', 'axis-title').text(\"Age\");\n    xtitle.attr('text-anchor', 'middle');\n    xtitle.attr('x', xmid);\n    xtitle.attr('y', height + 40);\n    const ytitle = svg.append('text').attr('class', 'axis-title').text('Distribution');\n    ytitle.attr('x', -240);\n    ytitle.attr('y', -80);\n    ytitle.attr('dy', '1.75ex');\n    ytitle.attr('text-anchor', 'middle');\n    ytitle.attr('transform', 'rotate(-90)'); // const tooltip = d3\n    //     .select('#container')\n    //     .append('div')\n    //     .attr('class', 'tooltip')\n    //     .style('opacity', 0);\n    // function mouseover() {\n    //     d3.select(this).attr(\"opacity\", .5)\n    // }\n    // function mouseout() {\n    //     d3.select(this).attr(\"opacity\", 1);\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default ScatterPlot;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/ScatterPlot.js"],"names":["React","d3","svg_count","ScatterPlot","Component","constructor","props","removeExistingBars","bind","createBarChart","state","svg","width","height","margin","componentDidMount","owidth","size","oheight","top","right","bottom","left","select","attr","append","setState","componentDidUpdate","midpoint","range","selectAll","remove","div","dataset","data","selector","console","log","dval","values","map","d","age","dig","value","color","single","Object","datum","line","x","xScale","y","yScale","xmid","ymid","xtitle","text","ytitle","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\n\nlet svg_count = 0;\n\nclass ScatterPlot extends React.Component {\n    constructor(props) {\n        super(props)\n        this.removeExistingBars = this.removeExistingBars.bind(this);\n        this.createBarChart = this.createBarChart.bind(this)\n        this.state = {\n            svg: null,\n            width: null,\n            height: null,\n            margin: null\n        };\n\n\n    }\n    componentDidMount() {\n        const owidth = this.props.size[0]\n        const oheight = this.props.size[1]\n\n        var margin = { top: 20, right: 20, bottom: 70, left: 100 },\n            width = owidth - margin.left - margin.right,\n            height = oheight - margin.top - margin.bottom;\n\n        const svg = d3.select(\"body\").select(\"#sp\").select(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n        this.setState({ svg, width, height, margin });\n    }\n    componentDidUpdate() {\n        this.removeExistingBars();\n        this.createBarChart();\n    }\n\n    midpoint(range) {\n        return range[0] + (range[1] - range[0]) / 2.0;\n    }\n\n    removeExistingBars() {\n        const { svg } = this.state;\n\n        svg.selectAll(\"*\").remove();\n\n    }\n\n    createBarChart() {\n        const { svg } = this.state;\n        const { div } = this.state;\n        const { width } = this.state;\n        const { height } = this.state;\n        const { margin } = this.state;\n        const dataset = this.props.data\n\n        const selector = this.props.selector\n\n    \n\n        console.log(\"data\", dataset);\n\n        var dval = dataset[selector].values.map(function (d) { return d.age; });\n        var dig = dataset[selector].values.map(function (d) { return d.value; });\n\n        console.log(\"distribution\", dval)\n        console.log(\"value\", dig)\n\n\n\n        var color = [\"#D73F47\", \"#3381E1\", \"#ED7A22\", \"#65A9A3\"];\n\n        // var line2 = d3.line()\n        //     .x(function (d, i) { return xScale(d[0].x); }) // set the x values for the line generator\n        //     .y(function (d) { return yScale(d.y); }) // set the y values for the line generator\n        //     .curve(d3.curveMonotoneX) // apply smoothing to the line\n\n\n        // var color = d3.scaleOrdinal(d3.schemeCategory10)\n\n\n        // xScale.domain([0, d3.max(dataset, function (key) { return d3.max(key.values, function (d) { return d.distribution; }); })]);\n        // yScale.domain([0, d3.max(dataset, function (key) { return d3.max(key.values, function (d) { return d.value; }); })]);\n\n\n    \n\n        // for (var singlekey = 0; singlekey < 1; singlekey++) {\n        let single = Object.values(dataset[selector])[1]\n        console.log(single)\n        console.log(selector)\n\n        // var line = d3.line()\n        //     .x(function (single) { return xScale(single.age); }) // set the x values for the line generator\n        //     .y(function (single) { return yScale(single.value); }) // set the y values for the line generator\n        //     .curve(d3.curveMonotoneX) // apply smoothing to the line\n\n\n        // Add the line\n        svg.append(\"path\")\n            .datum(single)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"steelblue\")\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", d3.line()\n                .x(function (d) { return xScale(d.age) })\n                .y(function (d) { return yScale(d.value) })\n            )\n\n        // svg.append(\"path\")\n        //     .datum(single)\n        //     .attr(\"class\", \"line\")\n        //     .attr(\"d\", line)\n        //     .style(\"fill\", color[selector])\n\n        // svg.selectAll(\".dot\")\n        //     .data(single)\n        //     .enter().append(\"circle\")\n        //     .attr(\"class\", \"dot1\")\n        //     .attr(\"cx\", function (d) { return xScale(d.age) })\n        //     .attr(\"cy\", function (d) { return yScale(d.value) })\n        //     .attr(\"transform\", \"translate(40)\")\n        //     .attr(\"r\", 5)\n        //     .style(\"fill\", color[selector])\n\n        // .style(\"fill\", color(selector))\n        // .on(\"mouseover\", function (a, b, c) {\n        //     console.log(a)\n        //     this.attr('class', 'focus')\n        // })\n        // .on(\"mouseout\", function () { })\n        //       .on(\"mousemove\", mousemove);\n\n\n        const xmid = xScale.range()[0] + (xScale.range()[1] - xScale.range()[0]) / 2.0;\n        const ymid = yScale.range()[0] + (yScale.range()[1] - yScale.range()[0]) / 2.0;\n        const xtitle = svg.append('text')\n            .attr('class', 'axis-title')\n            .text(\"Age\");\n        xtitle.attr('text-anchor', 'middle');\n        xtitle.attr('x', xmid);\n        xtitle.attr('y', height + 40);\n        const ytitle = svg.append('text')\n            .attr('class', 'axis-title')\n            .text('Distribution')\n        ytitle.attr('x', -240);\n        ytitle.attr('y', -80);\n        ytitle.attr('dy', '1.75ex');\n        ytitle.attr('text-anchor', 'middle');\n        ytitle.attr('transform', 'rotate(-90)');\n\n        // const tooltip = d3\n        //     .select('#container')\n        //     .append('div')\n        //     .attr('class', 'tooltip')\n        //     .style('opacity', 0);\n\n        // function mouseover() {\n        //     d3.select(this).attr(\"opacity\", .5)\n\n        // }\n\n        // function mouseout() {\n        //     d3.select(this).attr(\"opacity\", 1);\n        // }\n\n    }\n\n\n\n    render() {\n        return (\n            <svg/>\n        )\n    }\n\n}\n\nexport default ScatterPlot;\n"]},"metadata":{},"sourceType":"module"}