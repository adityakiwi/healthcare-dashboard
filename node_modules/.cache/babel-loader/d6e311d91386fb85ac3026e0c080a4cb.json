{"ast":null,"code":"var _jsxFileName = \"/Users/chia/Desktop/USF/senior team/dashboard/src/views/dashboard/DashboardView/d3/AreaChart.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport * as d3l from 'd3-svg-legend';\nimport { event as currentEvent } from 'd3-selection';\nlet svg_count = 0;\n\nclass AreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.removeExistingBars = this.removeExistingBars.bind(this);\n    this.createBarChart = this.createBarChart.bind(this);\n    this.state = {\n      svg: null,\n      legend: null,\n      width: 0,\n      height: 0\n    };\n  }\n\n  componentDidMount() {\n    const owidth = this.props.size[0];\n    const oheight = this.props.size[1];\n    var margin = {\n      top: 20,\n      right: 20,\n      bottom: 70,\n      left: 100\n    },\n        width = owidth - margin.left - margin.right,\n        height = oheight - margin.top - margin.bottom;\n    const svg = d3.select(\"body\").select(\"#ac\").select(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    this.setState({\n      svg,\n      width,\n      height\n    });\n  }\n\n  componentDidUpdate() {\n    this.removeExistingBars();\n    this.createBarChart();\n  }\n\n  midpoint(range) {\n    return range[0] + (range[1] - range[0]) / 2.0;\n  }\n\n  removeExistingBars() {\n    const {\n      svg\n    } = this.state;\n    svg.selectAll(\"*\").remove();\n  }\n\n  createBarChart() {\n    const {\n      svg\n    } = this.state;\n    const {\n      width\n    } = this.state;\n    const {\n      height\n    } = this.state;\n    const output = this.props.data;\n    let data = output.filter(function (e) {\n      return e.id < 299;\n    });\n    var color = d3.scaleOrdinal().range([\"#60a3bc\", \"#e55039\", \"#4a69bd\", \"#f6b93b\", \"#78e08f\", \"#0a3d62\", \"#b71540\", \"#0c2461\", \"#e58e26\", \"#079992\", \"#3c6382\", \"#eb2f06\", \"#1e3799\", \"#fa983a\", \"#38ada9\", \"#82ccdd\", \"#f8c291\", \"#6a89cc\", \"#fad390\", \"#b8e994\"]);\n    var keys = this.props.keys;\n    console.log(keys);\n    var stackedData = d3.stack().keys(keys)(data);\n    console.log(\"originalData\", data);\n    console.log(\"pancake\", stackedData); // color palette\n\n    var color = d3.scaleOrdinal().domain(keys).range(d3.schemeSet2); //////////\n    // AXIS //\n    //////////\n    // Add X axis\n\n    var x = d3.scaleLinear().domain(d3.extent(data, function (d) {\n      return d.id;\n    })).range([0, width]);\n    var xAxis = svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).ticks(5)); // Add X axis label:\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"x\", width).attr(\"y\", height + 40).text(\"Age\"); // Add Y axis label:\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"x\", 0).attr(\"y\", -20).text(\"Distribution\").attr(\"text-anchor\", \"start\"); // Add Y axis\n\n    var y = d3.scaleLinear().domain([0, 500]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y).ticks(5)); //////////\n    // BRUSHING AND CHART //\n    //////////\n    // Add a clipPath: everything out of this area won't be drawn.\n\n    var clip = svg.append(\"defs\").append(\"svg:clipPath\").attr(\"id\", \"clip\").append(\"svg:rect\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", 0).attr(\"y\", 0); // Add brushing\n\n    var brush = d3.brushX() // Add the brush feature using the d3.brush function\n    .extent([[0, 0], [width, height]]) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n    .on(\"end\", updateChart); // Each time the brush selection changes, trigger the 'updateChart' function\n    // Create the scatter variable: where both the circles and the brush take place\n\n    var areaChart = svg.append('g').attr(\"clip-path\", \"url(#clip)\"); // Area generator\n\n    var area = d3.area().x(function (d) {\n      return x(d.data.id);\n    }).y0(function (d) {\n      return y(d[0]);\n    }).y1(function (d) {\n      return y(d[1]);\n    });\n    var colors = [\"#60a3bc\", \"#e55039\", \"#4a69bd\", \"#f6b93b\", \"#78e08f\", \"#0a3d62\", \"#b71540\", \"#0c2461\", \"#e58e26\", \"#079992\", \"#3c6382\", \"#eb2f06\", \"#1e3799\", \"#fa983a\", \"#38ada9\", \"#82ccdd\", \"#f8c291\", \"#6a89cc\", \"#fad390\", \"#b8e994\"]; // Show the areas\n\n    areaChart.selectAll(\"mylayers\").data(stackedData).enter().append(\"path\").attr(\"class\", function (d) {\n      return \"myArea \" + d.key;\n    }).style(\"fill\", function (d, i) {\n      return colors[i];\n    }).attr(\"d\", area); // Add the brushing\n\n    areaChart.append(\"g\").attr(\"class\", \"brush\").call(brush);\n    var idleTimeout;\n\n    function idled() {\n      idleTimeout = null;\n    } // A function that update the chart for given boundaries\n\n\n    function updateChart(event, d) {\n      let extent = event.selection; // If no selection, back to initial coordinate. Otherwise, update X axis domain\n\n      if (!extent) {\n        if (!idleTimeout) return idleTimeout = setTimeout(idled, 350); // This allows to wait a little bit\n\n        x.domain(d3.extent(data, function (d) {\n          return d.id;\n        }));\n      } else {\n        x.domain([x.invert(extent[0]), x.invert(extent[1])]);\n        areaChart.select(\".brush\").call(brush.move, null); // This remove the grey brush area as soon as the selection has been done\n      } // Update axis and area position\n\n\n      xAxis.transition().duration(1000).call(d3.axisBottom(x).ticks(5));\n      areaChart.selectAll(\"path\").transition().duration(1000).attr(\"d\", area);\n    } //////////\n    // HIGHLIGHT GROUP //\n    //////////\n    // What to do when one group is hovered\n\n\n    var highlight = function (d) {\n      console.log(d); // reduce opacity of all groups\n\n      d3.selectAll(\".myArea\").style(\"opacity\", .1); // expect the one that is hovered\n\n      d3.select(\".\" + d).style(\"opacity\", 1);\n    }; // And when it is not hovered anymore\n\n\n    var noHighlight = function (d) {\n      d3.selectAll(\".myArea\").style(\"opacity\", 1);\n    };\n\n    var legend = d3l.legendColor().scale(color).shape('circle').orient('vertical').labelOffset(5);\n    svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", \"translate(\" + (width - 80) + \", \" + 20 + \")\").style(\"font-size\", \"12\");\n    svg.select(\".legend\").call(legend);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default AreaChart;","map":{"version":3,"sources":["/Users/chia/Desktop/USF/senior team/dashboard/src/views/dashboard/DashboardView/d3/AreaChart.js"],"names":["React","d3","d3l","event","currentEvent","svg_count","AreaChart","Component","constructor","props","removeExistingBars","bind","createBarChart","state","svg","legend","width","height","componentDidMount","owidth","size","oheight","margin","top","right","bottom","left","select","attr","append","setState","componentDidUpdate","midpoint","range","selectAll","remove","output","data","filter","e","id","color","scaleOrdinal","keys","console","log","stackedData","stack","domain","schemeSet2","x","scaleLinear","extent","d","xAxis","call","axisBottom","ticks","text","y","axisLeft","clip","brush","brushX","on","updateChart","areaChart","area","y0","y1","colors","enter","key","style","i","idleTimeout","idled","selection","setTimeout","invert","move","transition","duration","highlight","noHighlight","legendColor","scale","shape","orient","labelOffset","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport * as d3l from 'd3-svg-legend'\nimport { event as currentEvent } from 'd3-selection';\n\nlet svg_count = 0;\n\nclass AreaChart extends React.Component {\n    constructor(props) {\n        super(props)\n        this.removeExistingBars = this.removeExistingBars.bind(this);\n        this.createBarChart = this.createBarChart.bind(this)\n        this.state = {\n            svg: null,\n            legend:null,\n            width: 0,\n            height: 0\n        };\n\n    }\n\n    componentDidMount() {\n        const owidth = this.props.size[0]\n        const oheight = this.props.size[1]\n\n        var margin = { top: 20, right: 20, bottom: 70, left: 100 },\n            width = owidth - margin.left - margin.right,\n            height = oheight - margin.top - margin.bottom;\n\n        const svg = d3.select(\"body\").select(\"#ac\").select(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        this.setState({ svg, width, height });\n    }\n\n    componentDidUpdate() {\n        this.removeExistingBars();\n        this.createBarChart();\n    }\n\n    midpoint(range) {\n        return range[0] + (range[1] - range[0]) / 2.0;\n    }\n\n    removeExistingBars() {\n        const { svg } = this.state;\n        svg.selectAll(\"*\").remove();\n    }\n\n    createBarChart() {\n        const { svg } = this.state;\n        const { width } = this.state;\n        const { height } = this.state;\n\n        const output = this.props.data\n\n        let data = output.filter(function (e) {\n            return e.id < 299;\n        });\n\n        var color = d3.scaleOrdinal().range([\"#60a3bc\", \"#e55039\", \"#4a69bd\", \"#f6b93b\", \"#78e08f\",\n                \"#0a3d62\", \"#b71540\", \"#0c2461\", \"#e58e26\", \"#079992\",\n                \"#3c6382\", \"#eb2f06\", \"#1e3799\", \"#fa983a\", \"#38ada9\",\n                \"#82ccdd\", \"#f8c291\", \"#6a89cc\", \"#fad390\", \"#b8e994\"]);\n\n        var keys = this.props.keys\n        console.log(keys)\n        var stackedData = d3.stack()\n            .keys(keys)\n            (data)\n\n        console.log(\"originalData\", data)\n        console.log(\"pancake\", stackedData)\n\n        // color palette\n        var color = d3.scaleOrdinal()\n            .domain(keys)\n            .range(d3.schemeSet2);\n\n        //////////\n        // AXIS //\n        //////////\n\n        // Add X axis\n        var x = d3.scaleLinear()\n            .domain(d3.extent(data, function (d) { return d.id; }))\n            .range([0, width]);\n\n        var xAxis = svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x).ticks(5))\n\n        // Add X axis label:\n        svg.append(\"text\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"x\", width)\n            .attr(\"y\", height + 40)\n            .text(\"Age\");\n\n        // Add Y axis label:\n        svg.append(\"text\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"x\", 0)\n            .attr(\"y\", -20)\n            .text(\"Distribution\")\n            .attr(\"text-anchor\", \"start\")\n\n        // Add Y axis\n        var y = d3.scaleLinear()\n            .domain([0, 500])\n            .range([height, 0]);\n        svg.append(\"g\")\n            .call(d3.axisLeft(y).ticks(5))\n\n        //////////\n        // BRUSHING AND CHART //\n        //////////\n\n        // Add a clipPath: everything out of this area won't be drawn.\n        var clip = svg.append(\"defs\").append(\"svg:clipPath\")\n            .attr(\"id\", \"clip\")\n            .append(\"svg:rect\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0);\n\n        // Add brushing\n        var brush = d3.brushX()                 // Add the brush feature using the d3.brush function\n            .extent([[0, 0], [width, height]]) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n            .on(\"end\", updateChart) // Each time the brush selection changes, trigger the 'updateChart' function\n\n        // Create the scatter variable: where both the circles and the brush take place\n        var areaChart = svg.append('g')\n            .attr(\"clip-path\", \"url(#clip)\")\n\n        // Area generator\n        var area = d3.area()\n            .x(function (d) { return x(d.data.id); })\n            .y0(function (d) { return y(d[0]); })\n            .y1(function (d) { return y(d[1]); })\n\n        var colors = [\"#60a3bc\", \"#e55039\", \"#4a69bd\", \"#f6b93b\", \"#78e08f\",\n                      \"#0a3d62\", \"#b71540\", \"#0c2461\", \"#e58e26\", \"#079992\",\n                      \"#3c6382\", \"#eb2f06\", \"#1e3799\", \"#fa983a\", \"#38ada9\",\n                      \"#82ccdd\", \"#f8c291\", \"#6a89cc\", \"#fad390\", \"#b8e994\"];\n        // Show the areas\n        areaChart\n            .selectAll(\"mylayers\")\n            .data(stackedData)\n            .enter()\n            .append(\"path\")\n            .attr(\"class\", function (d) { return \"myArea \" + d.key })\n            .style(\"fill\", function (d, i) { return colors[i]; })\n            .attr(\"d\", area)\n\n        // Add the brushing\n        areaChart\n            .append(\"g\")\n            .attr(\"class\", \"brush\")\n            .call(brush);\n\n        var idleTimeout\n        function idled() { idleTimeout = null; }\n\n        // A function that update the chart for given boundaries\n        function updateChart(event, d) {\n\n            let extent = event.selection\n\n            // If no selection, back to initial coordinate. Otherwise, update X axis domain\n            if (!extent) {\n                if (!idleTimeout) return idleTimeout = setTimeout(idled, 350); // This allows to wait a little bit\n                x.domain(d3.extent(data, function (d) { return d.id; }))\n            } else {\n                x.domain([x.invert(extent[0]), x.invert(extent[1])])\n                areaChart.select(\".brush\").call(brush.move, null) // This remove the grey brush area as soon as the selection has been done\n            }\n\n            // Update axis and area position\n            xAxis.transition().duration(1000).call(d3.axisBottom(x).ticks(5))\n            areaChart\n                .selectAll(\"path\")\n                .transition().duration(1000)\n                .attr(\"d\", area)\n        }\n\n        //////////\n        // HIGHLIGHT GROUP //\n        //////////\n\n        // What to do when one group is hovered\n        var highlight = function (d) {\n            console.log(d)\n            // reduce opacity of all groups\n            d3.selectAll(\".myArea\").style(\"opacity\", .1)\n            // expect the one that is hovered\n            d3.select(\".\" + d).style(\"opacity\", 1)\n        }\n\n        // And when it is not hovered anymore\n        var noHighlight = function (d) {\n            d3.selectAll(\".myArea\").style(\"opacity\", 1)\n        }\n\n        var legend = d3l.legendColor()\n            .scale(color)\n            .shape('circle')\n            .orient('vertical')\n            .labelOffset(5)\n\n        svg.append(\"g\")\n            .attr(\"class\", \"legend\")\n            .attr(\"transform\", \"translate(\" + (width - 80) + \", \" + 20 + \")\")\n            .style(\"font-size\", \"12\")\n\n        svg.select(\".legend\")\n            .call(legend);\n    }\n\n    render() {\n        return (\n            <svg />\n        )\n    }\n}\n\nexport default AreaChart;\n"]},"metadata":{},"sourceType":"module"}