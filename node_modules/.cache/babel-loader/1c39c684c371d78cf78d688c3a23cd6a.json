{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesAreaChart.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport AreaChart from './AreaChart';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction areaP(dataset) {\n  let arr = [];\n  console.log(\"aledata\", dataset);\n  console.log(\"dataprocess values\");\n  dataset.forEach(function (d) {\n    d.values.forEach(function (e) {\n      let o = {};\n      o[d.diagnosis] = e.value;\n      o.id = e.age;\n      o.total = e.value;\n      arr.push(o);\n    });\n  });\n  console.log(\"arr\", arr);\n  let output = [];\n  arr.forEach(function (item) {\n    console.log(\"each item\", item);\n    var exist = output.filter(function (v, i) {\n      return v.id == item.id;\n    });\n    console.log(\"exist\", exist);\n\n    if (exist.length) {\n      var index = output.indexOf(exist[0]);\n      var total = output[index].total + item.total;\n      console.log(\"index\", index);\n      console.log(\"total\", total);\n      Object.assign(output[index], item);\n      output[index].total = total;\n    } else {\n      if (typeof item.value == 'string') {\n        console.log(\"string\", item.value);\n        item.value = [item.value];\n      }\n\n      console.log(\"item\", item);\n      output.push(item);\n    }\n  });\n  output.sort(function (a, b) {\n    return a.id - b.id;\n  });\n  console.log(\"output\", output);\n  return output;\n}\n\nfunction getKeys(dataset) {\n  return dataset.map(function (d) {\n    return d.diagnosis;\n  });\n}\n\nconst DiagnosesLineChart = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let [loading, setLoading] = React.useState(true);\n  let [data, setData] = React.useState([]);\n  let [keys, setKeys] = React.useState([]);\n  React.useEffect(() => {\n    let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/age/';\n    fetch(apiUrl).then(response => response.json()).then(result => {\n      setData(areaP(result));\n      setKeys(getKeys(result));\n      setLoading(false);\n    });\n  }, []);\n  console.log(data); // const handleChange = (event) => {\n  //     setSelector(event.target.value);\n  // };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader // action={(\n  //     <Select\n  //         endIcon={<ArrowDropDownIcon />}\n  //         value={selector}\n  //         onChange={handleChange}\n  //     >\n  //         <MenuItem value={0}>Chest Pain</MenuItem>\n  //         <MenuItem value={1}>Pneumonia</MenuItem>\n  //         <MenuItem value={2}>Sepsis</MenuItem>\n  //         <MenuItem value={3}>Trauma</MenuItem>\n  //     </Select>\n  // )}\n  , {\n    title: \"Q4 Age Area Chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    id: \"lc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(AreaChart, {\n    data: data,\n    keys: keys,\n    size: [800, 800],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 87\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }));\n};\n\nDiagnosesLineChart.propTypes = {\n  className: PropTypes.string\n};\nexport default DiagnosesLineChart;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesAreaChart.js"],"names":["React","clsx","PropTypes","AreaChart","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","ArrowDropDownIcon","ArrowRightIcon","CircularProgress","Select","MenuItem","useStyles","root","areaP","dataset","arr","console","log","forEach","d","values","e","o","diagnosis","value","id","age","total","push","output","item","exist","filter","v","i","length","index","indexOf","Object","assign","sort","a","b","getKeys","map","DiagnosesLineChart","className","rest","classes","theme","loading","setLoading","useState","data","setData","keys","setKeys","useEffect","apiUrl","fetch","then","response","json","result","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport AreaChart from './AreaChart';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    useTheme,\n    makeStyles,\n    colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\n\nfunction areaP(dataset) {\n    let arr = []\n    console.log(\"aledata\", dataset)\n    console.log(\"dataprocess values\")\n    dataset.forEach(function (d) {\n        d.values.forEach(function (e) {\n            let o = {}\n            o[d.diagnosis] = e.value\n            o.id = e.age\n            o.total = e.value\n            arr.push(o)\n        })\n    });\n    console.log(\"arr\", arr)\n\n    let output = []\n\n    arr.forEach(function (item) {\n        console.log(\"each item\", item)\n        var exist = output.filter(function (v, i) {\n            return v.id == item.id\n        });\n        console.log(\"exist\", exist)\n        if (exist.length) {\n            var index = output.indexOf(exist[0]);\n            var total = output[index].total + item.total;\n            console.log(\"index\", index)\n            console.log(\"total\", total)\n            Object.assign(output[index], item);\n            output[index].total = total;\n        } else {\n            if (typeof item.value == 'string') {\n                console.log(\"string\", item.value)\n                item.value = [item.value];\n            }\n            console.log(\"item\", item)\n            output.push(item);\n        }\n    });\n    output.sort(function (a, b) { return a.id - b.id; });\n\n    console.log(\"output\", output)\n    return output\n}\n\nfunction getKeys(dataset)\n{\n    return dataset.map(function (d) { return d.diagnosis; });\n}\nconst DiagnosesLineChart = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    let [loading, setLoading] = React.useState(true);\n    let [data, setData] = React.useState([]);\n    let [keys, setKeys] = React.useState([]);\n\n    React.useEffect(() => {\n        let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/age/';\n        fetch(apiUrl)\n            .then((response) => response.json())\n            .then(result => {\n                setData(areaP(result));\n                setKeys(getKeys(result));\n                setLoading(false);\n            })\n    }, [])\n    console.log(data)\n\n    // const handleChange = (event) => {\n    //     setSelector(event.target.value);\n    // };\n\n    return (\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardHeader\n                // action={(\n                //     <Select\n                //         endIcon={<ArrowDropDownIcon />}\n                //         value={selector}\n                //         onChange={handleChange}\n                //     >\n                //         <MenuItem value={0}>Chest Pain</MenuItem>\n                //         <MenuItem value={1}>Pneumonia</MenuItem>\n                //         <MenuItem value={2}>Sepsis</MenuItem>\n                //         <MenuItem value={3}>Trauma</MenuItem>\n                //     </Select>\n                // )}\n                title=\"Q4 Age Area Chart\"\n            />\n            <Divider />\n            <CardContent id={\"lc\"}>\n                {/* <Box\n          id={\"gbc\"}\n          height={400}\n          position=\"relative\"\n        > */}\n                {!loading ? <AreaChart data={data} keys={keys} size={[800, 800]} /> : <CircularProgress />}\n                {/* </Box> */}\n            </CardContent>\n            <Divider />\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                p={2}\n            >\n                {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button> */}\n            </Box>\n        </Card>\n    );\n};\n\nDiagnosesLineChart.propTypes = {\n    className: PropTypes.string\n};\n\nexport default DiagnosesLineChart;\n"]},"metadata":{},"sourceType":"module"}