{"ast":null,"code":"import _defineProperty from\"/Users/aditya/Dropbox/Wesbite/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/aditya/Dropbox/Wesbite/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/aditya/Dropbox/Wesbite/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/aditya/Dropbox/Wesbite/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import clsx from'clsx';import GroupedBarChart from'./d3/GroupedBarChart';import{Box,Button,Card,CardContent,CardHeader,Divider,useTheme,makeStyles,colors,CardActions}from'@material-ui/core';import ArrowDropDownIcon from'@material-ui/icons/ArrowDropDown';import ArrowRightIcon from'@material-ui/icons/ArrowRight';import CircularProgress from'@material-ui/core/CircularProgress';import Select from'@material-ui/core/Select';import MenuItem from'@material-ui/core/MenuItem';import FormControlLabel from'@material-ui/core/FormControlLabel';import Switch from'@material-ui/core/Switch';var useStyles=makeStyles(function(){return{root:{}};});var DiagnosesBarChart=function DiagnosesBarChart(_ref){var className=_ref.className,rest=_objectWithoutProperties(_ref,[\"className\"]);var classes=useStyles();var theme=useTheme();var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),loading=_React$useState2[0],setLoading=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),data=_React$useState4[0],setData=_React$useState4[1];var _React$useState5=React.useState('gender'),_React$useState6=_slicedToArray(_React$useState5,2),selector=_React$useState6[0],setSelector=_React$useState6[1];var _React$useState7=React.useState({logarithmic:false}),_React$useState8=_slicedToArray(_React$useState7,2),scale=_React$useState8[0],setScale=_React$useState8[1];console.log(selector);React.useEffect(function(){var apiUrl='https://raw.githubusercontent.com/adityanz/healthcare-dashboard/master/src/data/diagnosis_dist/'+selector+'.json';fetch(apiUrl).then(function(response){return response.json();}).then(function(result){setData(result);setLoading(false);});},[selector,scale]);console.log(data);var handleCategory=function handleCategory(event){setLoading(true);setSelector(event.target.value);};var handleScale=function handleScale(event){setScale(_objectSpread(_objectSpread({},scale),{},_defineProperty({},event.target.name,event.target.checked)));};return/*#__PURE__*/React.createElement(Card,Object.assign({className:clsx(classes.root,className)},rest),/*#__PURE__*/React.createElement(CardHeader,{action:/*#__PURE__*/React.createElement(Select,{endIcon:/*#__PURE__*/React.createElement(ArrowDropDownIcon,null),value:selector,onChange:handleCategory},/*#__PURE__*/React.createElement(MenuItem,{value:\"gender\"},\"Gender\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"religion\"},\"Religion\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"ethnicity\"},\"Ethnicity\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"language\"},\"Language\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"insurance\"},\"Insurance\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"maritalstatus\"},\"Marital Status\")),title:\"Diagnoses Distribution of Admitted Patients\"}),/*#__PURE__*/React.createElement(CardActions,null,/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Switch,{checked:scale.logarithmic,onChange:handleScale,name:\"logarithmic\",color:\"primary\"}),label:\"Logarithmic\"})),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(CardContent,{id:\"gbc\"},!loading?/*#__PURE__*/React.createElement(GroupedBarChart,{data:data,selector:selector,scale:scale,size:[850,500]}):/*#__PURE__*/React.createElement(CircularProgress,null)),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Box,{display:\"flex\",justifyContent:\"flex-end\",p:2}));};export default DiagnosesBarChart;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Wesbite/dashboard/src/views/dashboard/DashboardView/DiagnosesGroupedBarChart.js"],"names":["React","clsx","GroupedBarChart","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","CardActions","ArrowDropDownIcon","ArrowRightIcon","CircularProgress","Select","MenuItem","FormControlLabel","Switch","useStyles","root","DiagnosesBarChart","className","rest","classes","theme","useState","loading","setLoading","data","setData","selector","setSelector","logarithmic","scale","setScale","console","log","useEffect","apiUrl","fetch","then","response","json","result","handleCategory","event","target","value","handleScale","name","checked"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport GroupedBarChart from './d3/GroupedBarChart';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  CardActions\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst DiagnosesBarChart = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  let [loading, setLoading] = React.useState(true);\n  let [data, setData] = React.useState([]);\n  let [selector, setSelector] = React.useState('gender');\n  let [scale, setScale] = React.useState({\n    logarithmic: false,\n  });\n\n  console.log(selector)\n  React.useEffect(() => {\n    let apiUrl = 'https://raw.githubusercontent.com/adityanz/healthcare-dashboard/master/src/data/diagnosis_dist/' + selector + '.json';\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then(result => {\n        setData(result);\n        setLoading(false);\n      })\n  }, [selector, scale])\n  console.log(data)\n\n  const handleCategory = (event) => {\n    setLoading(true)\n    setSelector(event.target.value);\n   };\n\n  const handleScale = (event) => {\n    setScale({ ...scale, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={(\n        <Select\n          endIcon={<ArrowDropDownIcon />}\n          value={selector}\n          onChange={handleCategory}\n        >\n         <MenuItem value={\"gender\"}>Gender</MenuItem>\n         <MenuItem value={\"religion\"}>Religion</MenuItem>\n         <MenuItem value={\"ethnicity\"}>Ethnicity</MenuItem>\n         <MenuItem value={\"language\"}>Language</MenuItem>\n         <MenuItem value={\"insurance\"}>Insurance</MenuItem>\n         <MenuItem value={\"maritalstatus\"}>Marital Status</MenuItem>\n        </Select>\n        )}\n        title=\"Diagnoses Distribution of Admitted Patients\"\n      />\n      <CardActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={scale.logarithmic}\n                onChange={handleScale}\n                name=\"logarithmic\"\n                color=\"primary\"\n              />\n            }\n            label=\"Logarithmic\"\n          />\n      </CardActions>\n      <Divider />\n       <CardContent id={\"gbc\"}>\n        {/* <Box\n          id={\"gbc\"}\n          height={400}\n          position=\"relative\"\n        > */}\n        {!loading ? <GroupedBarChart data={data} selector={selector} scale={scale} size={[850, 500]} /> : <CircularProgress />}\n         {/* </Box> */}\n       </CardContent>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button> */}\n      </Box>\n    </Card>\n  );\n};\n\nDiagnosesBarChart.propTypes = {\n  className: PropTypes.string\n};\n\nexport default DiagnosesBarChart;\n"]},"metadata":{},"sourceType":"module"}