{"ast":null,"code":"import _slicedToArray from\"/Users/aditya/Dropbox/Senior S1/ST/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/aditya/Dropbox/Senior S1/ST/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import clsx from'clsx';import GroupedBarChart from'./GroupedBarChart';import{Box,Button,Card,CardContent,CardHeader,Divider,useTheme,makeStyles,colors}from'@material-ui/core';import ArrowDropDownIcon from'@material-ui/icons/ArrowDropDown';import ArrowRightIcon from'@material-ui/icons/ArrowRight';import CircularProgress from'@material-ui/core/CircularProgress';import Select from'@material-ui/core/Select';import MenuItem from'@material-ui/core/MenuItem';var useStyles=makeStyles(function(){return{root:{}};});var DiagnosesBarChart=function DiagnosesBarChart(_ref){var className=_ref.className,rest=_objectWithoutProperties(_ref,[\"className\"]);var classes=useStyles();var theme=useTheme();var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),loading=_React$useState2[0],setLoading=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),data=_React$useState4[0],setData=_React$useState4[1];var _React$useState5=React.useState('gender'),_React$useState6=_slicedToArray(_React$useState5,2),selector=_React$useState6[0],setSelector=_React$useState6[1];console.log(selector);React.useEffect(function(){var apiUrl='https://visualizing-healthcare-data.wm.r.appspot.com/diagnosis_dist/'+selector+'/';fetch(apiUrl).then(function(response){return response.json();}).then(function(result){setData(result);setLoading(false);});},[selector]);console.log(data);var handleChange=function handleChange(event){setLoading(true);setSelector(event.target.value);};return/*#__PURE__*/React.createElement(Card,Object.assign({className:clsx(classes.root,className)},rest),/*#__PURE__*/React.createElement(CardHeader,{action:/*#__PURE__*/React.createElement(Select,{endIcon:/*#__PURE__*/React.createElement(ArrowDropDownIcon,null),value:selector,onChange:handleChange},/*#__PURE__*/React.createElement(MenuItem,{value:\"gender\"},\"Gender\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"religion\"},\"Religion\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"ethnicity\"},\"Ethnicity\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"language\"},\"Language\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"insurance\"},\"Insurance\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"maritalstatus\"},\"Marital Status\")),title:\"ICU Diagnoses  \"}),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(CardContent,{id:\"gbc\"},!loading?/*#__PURE__*/React.createElement(GroupedBarChart,{data:data,selector:selector,size:[1200,800]}):/*#__PURE__*/React.createElement(CircularProgress,null)),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Box,{display:\"flex\",justifyContent:\"flex-end\",p:2}));};export default DiagnosesBarChart;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/reports/DashboardView/DiagnosesBarChart.js"],"names":["React","clsx","GroupedBarChart","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","ArrowDropDownIcon","ArrowRightIcon","CircularProgress","Select","MenuItem","useStyles","root","DiagnosesBarChart","className","rest","classes","theme","useState","loading","setLoading","data","setData","selector","setSelector","console","log","useEffect","apiUrl","fetch","then","response","json","result","handleChange","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport GroupedBarChart from './GroupedBarChart';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst DiagnosesBarChart = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  let [loading, setLoading] = React.useState(true);\n  let [data, setData] = React.useState([]);\n  let [selector, setSelector] = React.useState('gender');\n  \n  console.log(selector)\n  React.useEffect(() => {\n    let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/diagnosis_dist/' + selector + '/';\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then(result => {\n        setData(result);\n        setLoading(false);\n      })\n\n  }, [selector])\n  console.log(data)\n\n  const handleChange = (event) => {\n    setLoading(true)\n    setSelector(event.target.value);\n   };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={(\n\n                  <Select\n            endIcon={<ArrowDropDownIcon />}\n          value={selector}\n          onChange={handleChange}\n        >\n          <MenuItem value={\"gender\"}>Gender</MenuItem>\n            <MenuItem value={\"religion\"}>Religion</MenuItem>\n            <MenuItem value={\"ethnicity\"}>Ethnicity</MenuItem>\n            <MenuItem value={\"language\"}>Language</MenuItem>\n            <MenuItem value={\"insurance\"}>Insurance</MenuItem>\n            <MenuItem value={\"maritalstatus\"}>Marital Status</MenuItem>\n        </Select>\n        )}\n        title=\"ICU Diagnoses  \"\n      />\n      <Divider />\n      <CardContent id={\"gbc\"}>\n        {/* <Box\n          id={\"gbc\"}\n          height={400}\n          position=\"relative\"\n        > */}\n        {!loading ? <GroupedBarChart data={data} selector={selector} size={[1200, 800]} /> : <CircularProgress />}\n        {/* </Box> */}\n      </CardContent>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button> */}\n      </Box>\n    </Card>\n  );\n};\n\nDiagnosesBarChart.propTypes = {\n  className: PropTypes.string\n};\n\nexport default DiagnosesBarChart;"]},"metadata":{},"sourceType":"module"}