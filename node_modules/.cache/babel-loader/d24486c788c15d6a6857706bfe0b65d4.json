{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesLineChart.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport LineChart from './LineChart';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst DiagnosesScatterPlot = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let [loading, setLoading] = React.useState(true);\n  let [data, setData] = React.useState([]);\n  let [keys, setKeys] = React.useState([]);\n  let [selector, setSelector] = React.useState(0);\n  console.log(selector);\n  React.useEffect(() => {\n    let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/icu_mortality';\n    fetch(apiUrl).then(response => response.json()).then(result => {\n      setData(result);\n      setKeys(result.map(function (d) {\n        return d.diagnosis;\n      }));\n      setLoading(false);\n    });\n  }, []);\n  console.log(data);\n\n  const handleChange = event => {\n    setSelector(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(Select, {\n      endIcon: /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 34\n        }\n      }),\n      value: selector,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, keys[0]), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, keys[1]), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, keys[2]), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, keys[3])),\n    title: \"Q7 ICU Line Chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    id: \"sp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(LineChart, {\n    dataset: data,\n    selector: selector,\n    size: [800, 800],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 98\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }));\n};\n\nDiagnosesScatterPlot.propTypes = {\n  className: PropTypes.string\n};\nexport default DiagnosesScatterPlot;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesLineChart.js"],"names":["React","clsx","PropTypes","LineChart","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","ArrowDropDownIcon","ArrowRightIcon","CircularProgress","Select","MenuItem","useStyles","root","DiagnosesScatterPlot","className","rest","classes","theme","loading","setLoading","useState","data","setData","keys","setKeys","selector","setSelector","console","log","useEffect","apiUrl","fetch","then","response","json","result","map","d","diagnosis","handleChange","event","target","value","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport LineChart from './LineChart';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    useTheme,\n    makeStyles,\n    colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nconst DiagnosesScatterPlot = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    let [loading, setLoading] = React.useState(true);\n    let [data, setData] = React.useState([]);\n    let [keys, setKeys] = React.useState([]);\n    let [selector, setSelector] = React.useState(0);\n\n    console.log(selector)\n    React.useEffect(() => {\n        let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/icu_mortality';\n        fetch(apiUrl)\n            .then((response) => response.json())\n            .then(result => {\n                setData(result);\n                setKeys(result.map(function (d) { return d.diagnosis; }));\n                setLoading(false);\n            })\n    }, [])\n    console.log(data)\n\n    const handleChange = (event) => {\n        setSelector(event.target.value);\n    };\n\n    return (\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardHeader\n                action={(\n                    <Select\n                        endIcon={<ArrowDropDownIcon />}\n                        value={selector}\n                        onChange={handleChange}\n                    >\n                        <MenuItem value={0}>{keys[0]}</MenuItem>\n                        <MenuItem value={1}>{keys[1]}</MenuItem>\n                        <MenuItem value={2}>{keys[2]}</MenuItem>\n                        <MenuItem value={3}>{keys[3]}</MenuItem>\n                    </Select>\n                )}\n                title=\"Q7 ICU Line Chart\"\n            />\n            <Divider />\n            <CardContent id={\"sp\"}>\n                {/* <Box\n          id={\"gbc\"}\n          height={400}\n          position=\"relative\"\n        > */}\n                {!loading ? <LineChart dataset={data} selector={selector} size={[800, 800]} /> : <CircularProgress />}\n                {/* </Box> */}\n            </CardContent>\n            <Divider />\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                p={2}\n            >\n                {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button> */}\n            </Box>\n        </Card>\n    );\n};\n\nDiagnosesScatterPlot.propTypes = {\n    className: PropTypes.string\n};\n\nexport default DiagnosesScatterPlot;\n"]},"metadata":{},"sourceType":"module"}