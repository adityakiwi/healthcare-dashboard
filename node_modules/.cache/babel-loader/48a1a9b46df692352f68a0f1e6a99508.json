{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/reports/DashboardView/DiagnosesBarChart.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport GroupedBarChart from './GroupedBarChart';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\nconst apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/diagnosis_dist/gender/';\n\nconst DiagnosesBarChart = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [loading, setLoading] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [selector, setSelector] = React.useState('');\n  React.useEffect(() => {\n    fetch(apiUrl).then(response => response.json()).then(result => {\n      setData(result);\n      setLoading(false);\n    });\n  }, []);\n  console.log(data);\n\n  const handleChange = event => {// setAge(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(Select, {\n      endIcon: /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }\n      }),\n      value: age,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"gender\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"religion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Religion\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"ethnicity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Ethnicity\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"maritalstatus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Marital Status\")),\n    title: \"ICU Diagnoses discovered by Gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    height: 400,\n    position: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(GroupedBarChart, {\n    data: data,\n    size: [500, 400],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 75\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n};\n\nDiagnosesBarChart.propTypes = {\n  className: PropTypes.string\n};\nexport default DiagnosesBarChart;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/reports/DashboardView/DiagnosesBarChart.js"],"names":["React","clsx","PropTypes","GroupedBarChart","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","ArrowDropDownIcon","ArrowRightIcon","CircularProgress","Select","MenuItem","useStyles","root","apiUrl","DiagnosesBarChart","className","rest","classes","theme","loading","setLoading","useState","data","setData","selector","setSelector","useEffect","fetch","then","response","json","result","console","log","handleChange","event","age","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,QAPF,EAQEC,UARF,EASEC,MATF,QAUO,mBAVP;AAWA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAGA,MAAMC,SAAS,GAAGP,UAAU,CAAC,OAAO;AAClCQ,EAAAA,IAAI,EAAE;AAD4B,CAAP,CAAD,CAA5B;AAGA,MAAMC,MAAM,GAAG,6EAAf;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAA4B;AACpD,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAMO,KAAK,GAAGf,QAAQ,EAAtB;AAEA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwB3B,KAAK,CAAC4B,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB9B,KAAK,CAAC4B,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BhC,KAAK,CAAC4B,QAAN,CAAe,EAAf,CAAhC;AAGA5B,EAAAA,KAAK,CAACiC,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAACd,MAAD,CAAL,CACGe,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdR,MAAAA,OAAO,CAACQ,MAAD,CAAP;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH;AAOD,GARD,EAQG,EARH;AASAY,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;;AAEA,QAAMY,YAAY,GAAIC,KAAD,IAAW,CAC9B;AACD,GAFD;;AAKA,sBACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEzC,IAAI,CAACuB,OAAO,CAACL,IAAT,EAAeG,SAAf;AADjB,KAEMC,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIE,oBAAC,UAAD;AACE,IAAA,MAAM,eAEI,oBAAC,MAAD;AACN,MAAA,OAAO,eAAE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AAER,MAAA,KAAK,EAAEoB,GAFC;AAGR,MAAA,QAAQ,EAAEF,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKR,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALQ,eAMN,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANM,eAON,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPM,eAQN,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARM,CAHZ;AAcE,IAAA,KAAK,EAAC,oCAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAoBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,eAqBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,MAAM,EAAE,GADV;AAEE,IAAA,QAAQ,EAAC,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,CAACf,OAAD,gBAAW,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEG,IAAvB;AAA6B,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,gBAA+D,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARlE,CADF,CArBF,eAiCE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,eAkCE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,cAAc,EAAC,UAFjB;AAGE,IAAA,CAAC,EAAE,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CADF;AAmDD,CA5ED;;AA8EAR,iBAAiB,CAACuB,SAAlB,GAA8B;AAC5BtB,EAAAA,SAAS,EAAEpB,SAAS,CAAC2C;AADO,CAA9B;AAIA,eAAexB,iBAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport GroupedBarChart from './GroupedBarChart';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\nconst apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/diagnosis_dist/gender/';\n\nconst DiagnosesBarChart = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [loading, setLoading] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [selector, setSelector] = React.useState('');\n  \n\n  React.useEffect(() => {\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then(result => {\n        setData(result);\n        setLoading(false);\n      })\n\n  }, [])\n  console.log(data)\n\n  const handleChange = (event) => {\n    // setAge(event.target.value);\n  };\n  \n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={(\n\n                  <Select\n            endIcon={<ArrowDropDownIcon />}\n          value={age}\n          onChange={handleChange}\n        >\n          <MenuItem value={\"gender\"}>Gender</MenuItem>\n            <MenuItem value={\"religion\"}>Religion</MenuItem>\n            <MenuItem value={\"ethnicity\"}>Ethnicity</MenuItem>\n            <MenuItem value={\"maritalstatus\"}>Marital Status</MenuItem>\n        </Select>\n        )}\n        title=\"ICU Diagnoses discovered by Gender\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          height={400}\n          position=\"relative\"\n        >\n          {/* <Bar\n            data={data}\n            options={options}\n          /> */}\n          {!loading ? <GroupedBarChart data={data} size={[500, 400]} /> : <CircularProgress />}\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button> */}\n      </Box>\n    </Card>\n  );\n};\n\nDiagnosesBarChart.propTypes = {\n  className: PropTypes.string\n};\n\nexport default DiagnosesBarChart;"]},"metadata":{},"sourceType":"module"}