{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesTreeMap.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport ScatterPlot from './ScatterPlot';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst DiagnosesScatterPlot = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let [loading, setLoading] = React.useState(true);\n  let [data, setData] = React.useState([]);\n  React.useEffect(() => {\n    let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/icu_mortality';\n    fetch(apiUrl).then(response => response.json()).then(result => {\n      setData(result);\n      setLoading(false);\n    });\n  }, []);\n  console.log(data); // const handleChange = (event) => {\n  //     setSelector(event.target.value);\n  // };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader // action={(\n  //     <Select\n  //         endIcon={<ArrowDropDownIcon />}\n  //         value={selector}\n  //         onChange={handleChange}\n  //     >\n  //         <MenuItem value={0}>Chest Pain</MenuItem>\n  //         <MenuItem value={1}>Pneumonia</MenuItem>\n  //         <MenuItem value={2}>Sepsis</MenuItem>\n  //         <MenuItem value={3}>Trauma</MenuItem>\n  //     </Select>\n  // )}\n  , {\n    title: \"Q9 TreeMap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    id: \"sp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(ScatterPlot, {\n    data: data,\n    size: [800, 800],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 77\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n};\n\nDiagnosesScatterPlot.propTypes = {\n  className: PropTypes.string\n};\nexport default DiagnosesScatterPlot;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesTreeMap.js"],"names":["React","clsx","PropTypes","ScatterPlot","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","ArrowDropDownIcon","ArrowRightIcon","CircularProgress","Select","MenuItem","useStyles","root","DiagnosesScatterPlot","className","rest","classes","theme","loading","setLoading","useState","data","setData","useEffect","apiUrl","fetch","then","response","json","result","console","log","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport ScatterPlot from './ScatterPlot';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    useTheme,\n    makeStyles,\n    colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nconst DiagnosesScatterPlot = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    let [loading, setLoading] = React.useState(true);\n    let [data, setData] = React.useState([]);\n\n    React.useEffect(() => {\n        let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/icu_mortality';\n        fetch(apiUrl)\n            .then((response) => response.json())\n            .then(result => {\n                setData(result);\n                setLoading(false);\n            })\n    }, [])\n    console.log(data)\n\n    // const handleChange = (event) => {\n    //     setSelector(event.target.value);\n    // };\n\n    return (\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardHeader\n                // action={(\n                //     <Select\n                //         endIcon={<ArrowDropDownIcon />}\n                //         value={selector}\n                //         onChange={handleChange}\n                //     >\n                //         <MenuItem value={0}>Chest Pain</MenuItem>\n                //         <MenuItem value={1}>Pneumonia</MenuItem>\n                //         <MenuItem value={2}>Sepsis</MenuItem>\n                //         <MenuItem value={3}>Trauma</MenuItem>\n                //     </Select>\n                // )}\n                title=\"Q9 TreeMap\"\n            />\n            <Divider />\n            <CardContent id={\"sp\"}>\n                {/* <Box\n          id={\"gbc\"}\n          height={400}\n          position=\"relative\"\n        > */}\n                {!loading ? <ScatterPlot data={data} size={[800, 800]} /> : <CircularProgress />}\n                {/* </Box> */}\n            </CardContent>\n            <Divider />\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                p={2}\n            >\n                {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button> */}\n            </Box>\n        </Card>\n    );\n};\n\nDiagnosesScatterPlot.propTypes = {\n    className: PropTypes.string\n};\n\nexport default DiagnosesScatterPlot;\n"]},"metadata":{},"sourceType":"module"}