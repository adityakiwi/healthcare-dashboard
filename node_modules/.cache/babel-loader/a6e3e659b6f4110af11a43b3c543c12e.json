{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesStackedBarChart.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport ScatterPlot from './ScatterPlot';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ParallelCoordinates from './ParallelCoordinates';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction stackedbarP(dataset) {\n  console.log(\"localdata\", dataset);\n  let arr = [];\n\n  for (var i = 0; i < dataset.length; i++) {\n    for (var j = 0; j < dataset[i].values.length; j++) {\n      let o = {};\n      let diagnosis = dataset[i].diagnosis;\n      let distribution = dataset[i].values[j].distribution;\n      let dist = dataset[i].values[j].distribution;\n      let raw = dist.split(\"(\")[1];\n      let bare = dist.split(\"(\")[0];\n      let key = bare.trim();\n      let gender = raw.split(\")\")[0];\n      let value = dataset[i].values[j].value;\n      o.gender = gender;\n      o.disease = diagnosis;\n      o.total = value;\n      o[key] = value;\n      arr.push(o);\n    }\n  }\n\n  console.log(arr);\n}\n\nconst DiagnosesStackedBarChart = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let [loading, setLoading] = React.useState(true);\n  let [data, setData] = React.useState([]);\n  const [check, setCheck] = React.useState({\n    a: true,\n    b: true,\n    c: true,\n    d: true\n  });\n  React.useEffect(() => {\n    let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/insurance/gender';\n    let apiUrl2 = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/insurance/language'; // fetch(apiUrl)\n    //     .then((response) => response.json())\n    //     .then(result => pcv1data(result))\n    //     .then(result => {\n    //         setData(result);\n    //     })\n\n    fetch(apiUrl2).then(response => response.json()).then(result => stackedbarP(result)).then(result => {\n      setData(data.concat(result));\n      setLoading(false);\n    });\n  }, []);\n  console.log(data);\n\n  const handleChange = event => {\n    setCheck(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: check.checkedA,\n        onChange: handleChange,\n        name: \"checkedA\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 34\n        }\n      }),\n      label: \"Secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }),\n    title: \"Parallel Coordinates\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    id: \"pc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(ParallelCoordinates, {\n    data: data,\n    size: [800, 800],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 85\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }));\n};\n\nDiagnosesStackedBarChart.propTypes = {\n  className: PropTypes.string\n};\nexport default DiagnosesStackedBarChart;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesStackedBarChart.js"],"names":["React","clsx","PropTypes","ScatterPlot","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","ArrowDropDownIcon","ArrowRightIcon","CircularProgress","Select","MenuItem","FormControlLabel","Checkbox","ParallelCoordinates","useStyles","root","stackedbarP","dataset","console","log","arr","i","length","j","values","o","diagnosis","distribution","dist","raw","split","bare","key","trim","gender","value","disease","total","push","DiagnosesStackedBarChart","className","rest","classes","theme","loading","setLoading","useState","data","setData","check","setCheck","a","b","c","d","useEffect","apiUrl","apiUrl2","fetch","then","response","json","result","concat","handleChange","event","target","checkedA","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport ScatterPlot from './ScatterPlot';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    useTheme,\n    makeStyles,\n    colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ParallelCoordinates from './ParallelCoordinates'\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nfunction stackedbarP(dataset) {\n    console.log(\"localdata\", dataset)\n    let arr = []\n    for (var i = 0; i < dataset.length; i++) {\n        for (var j = 0; j < dataset[i].values.length; j++) {\n            let o = {}\n            let diagnosis = dataset[i].diagnosis\n            let distribution = dataset[i].values[j].distribution\n            let dist = dataset[i].values[j].distribution\n            let raw = dist.split(\"(\")[1]\n            let bare = dist.split(\"(\")[0]\n            let key = bare.trim()\n            let gender = raw.split(\")\")[0]\n            let value = dataset[i].values[j].value\n            o.gender = gender\n            o.disease = diagnosis\n            o.total = value;\n            o[key] = value\n            arr.push(o)\n        }\n    }\n    console.log(arr)\n\n    \n    \n}\nconst DiagnosesStackedBarChart = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    let [loading, setLoading] = React.useState(true);\n    let [data, setData] = React.useState([]);\n    const [check, setCheck] = React.useState({\n        a: true,\n        b: true,\n        c: true,\n        d: true,\n    });\n\n    React.useEffect(() => {\n        let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/insurance/gender';\n        let apiUrl2 = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/insurance/language';\n        // fetch(apiUrl)\n        //     .then((response) => response.json())\n        //     .then(result => pcv1data(result))\n        //     .then(result => {\n        //         setData(result);\n        //     })\n        fetch(apiUrl2)\n            .then((response) => response.json())\n            .then(result => stackedbarP(result))\n            .then(result => {\n                setData(data.concat(result));\n                setLoading(false);\n            })\n    }, [])\n    console.log(data)\n\n    const handleChange = (event) => {\n        setCheck(event.target.value);\n    };\n\n    return (\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardHeader\n                action={(\n                    <FormControlLabel\n                        control={<Checkbox checked={check.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                        label=\"Secondary\"\n                    />\n                )}\n                title=\"Parallel Coordinates\"\n            />\n            <Divider />\n            <CardContent id={\"pc\"}>\n                {/* <Box\n          id={\"gbc\"}\n          height={400}\n          position=\"relative\"\n        > */}\n                {!loading ? <ParallelCoordinates data={data} size={[800, 800]} /> : <CircularProgress />}\n                {/* </Box> */}\n            </CardContent>\n            <Divider />\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                p={2}\n            >\n                {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button> */}\n            </Box>\n        </Card>\n    );\n};\n\nDiagnosesStackedBarChart.propTypes = {\n    className: PropTypes.string\n};\n\nexport default DiagnosesStackedBarChart;\n"]},"metadata":{},"sourceType":"module"}