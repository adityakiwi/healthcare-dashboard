{"ast":null,"code":"var _jsxFileName = \"/Users/chia/Desktop/USF/senior team/dashboard/src/views/dashboard/DashboardView/WaffleChart.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport * as d3l from 'd3-svg-legend';\n\nclass WaffleChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.removeExistingBars = this.removeExistingBars.bind(this);\n    this.createBarChart = this.createBarChart.bind(this);\n    this.state = {\n      svg: null,\n      width: 0,\n      height: 0\n    };\n  }\n\n  componentDidMount() {\n    const width = this.props.size[0];\n    const height = this.props.size[1]; // var margin = { top: 20, right: 20, bottom: 70, left: 100 },\n    //     width = owidth - margin.left - margin.right,\n    //     height = oheight - margin.top - margin.bottom;\n\n    const svg = d3.select(\"body\").select(\"#wc\").select(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\"); // .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    this.setState({\n      svg,\n      width,\n      height\n    });\n  }\n\n  componentDidUpdate() {\n    this.removeExistingBars();\n    this.createBarChart();\n  }\n\n  midpoint(range) {\n    return range[0] + (range[1] - range[0]) / 2.0;\n  }\n\n  removeExistingBars() {\n    const {\n      svg\n    } = this.state;\n    svg.selectAll(\"*\").remove();\n  }\n\n  createBarChart() {\n    const {\n      svg\n    } = this.state;\n    let {\n      width\n    } = this.state;\n    let {\n      height\n    } = this.state;\n    const dataset = this.props.data;\n    const selector = this.props.selector;\n    let arr = [];\n    dataset.forEach(function (d) {\n      d.values.forEach(function (e) {\n        let o = {};\n        o.diagnosis = d.diagnosis;\n        o.age = e.age;\n        o.total = e.value;\n        arr.push(o);\n      });\n    });\n    let selectordata = [[12, 18], [18, 21], [22, 35], [36, 55], [55, 65], [65, 75], [75, 100]];\n    console.log(\"arr\", arr);\n    console.log(selectordata[selector][0]);\n    console.log(selectordata[selector][1]);\n    let arr_filtered = arr.filter(function (e) {\n      return e.age >= selectordata[selector][0] && e.age <= selectordata[selector][1];\n    });\n    console.log(arr_filtered);\n    let output = [];\n    arr_filtered.forEach(function (item) {\n      var exist = output.filter(function (v, i) {\n        return v.diagnosis == item.diagnosis;\n      });\n\n      if (exist.length) {\n        var index = output.indexOf(exist[0]);\n        var total = output[index].total + item.total;\n        Object.assign(output[index], item);\n        output[index].total = total;\n      } else {\n        if (typeof item.value == 'string') {\n          item.value = [item.value];\n        }\n\n        output.push(item);\n      }\n    });\n    console.log(\"output\", output);\n    let output_zero = output.filter(function (e) {\n      return e.total != 0;\n    });\n    console.log(\"output2\", output_zero);\n    let data = output_zero; // var tooltip = d3.select(\"body\")\n    //     .append(\"div\")\n    //     .style(\"position\", \"absolute\")\n    //     .style(\"z-index\", \"10\")\n    //     .style(\"visibility\", \"hidden\")\n    //     .style(\"color\", \"white\")\n    //     .style(\"padding\", \"8px\")\n    //     .style(\"background-color\", \"rgba(0, 0, 0, 0.75)\")\n    //     .style(\"border-radius\", \"6px\")\n    //     .style(\"font\", \"12px sans-serif\")\n    //     .text(\"tooltip\");\n\n    console.log(\"the incoming data\", data);\n    var total = 0;\n    var widthSquares = 20,\n        heightSquares = 5,\n        squareSize = 25,\n        squareValue = 0,\n        gap = 1,\n        theData = [];\n    var color = d3.scaleOrdinal(d3.schemeCategory10); //total\n\n    total = d3.sum(data, function (d) {\n      return d.total;\n    }); //value of a square\n\n    squareValue = total / (widthSquares * heightSquares); //remap data\n\n    data.forEach(function (d, i) {\n      console.log(\"dataeach\", d);\n      console.log(\"index\", i);\n      d.total = +d.total; // d.units = (Math.floor(d.total / squareValue)) < 1 ? 1 : (Math.floor(d.total / squareValue));\n\n      d.units = Math.floor(d.total / squareValue);\n      theData = theData.concat(Array(d.units + 1).join(1).split('').map(function () {\n        return {\n          squareValue: squareValue,\n          units: d.units,\n          total: d.total,\n          groupIndex: i\n        };\n      }));\n    });\n    width = squareSize * widthSquares + widthSquares * gap + 25;\n    height = squareSize * heightSquares + heightSquares * gap + 25;\n    console.log(\"end\");\n    console.log(theData);\n    svg.append(\"g\").attr(\"width\", width).attr(\"height\", height).append(\"g\").selectAll(\"div\").data(theData).enter().append(\"rect\").attr(\"width\", squareSize).attr(\"height\", squareSize).attr(\"fill\", function (d) {\n      {\n        console.log(d);\n      }\n      return color(data[d.groupIndex].diagnosis);\n    }).attr(\"x\", function (d, i) {\n      //group n squares for column\n      let col = Math.floor(i / heightSquares);\n      return col * squareSize + col * gap;\n    }).attr(\"y\", function (d, i) {\n      let row = i % heightSquares;\n      return heightSquares * squareSize - (row * squareSize + row * gap);\n    }).append(\"title\").text(function (d, i) {\n      return \"diagnosis range: \" + data[d.groupIndex].diagnosis + \" | \" + d.total + \" , \" + d.units + \"%\";\n    }); // .on(\"mouseover\", function (d) {\n    //     tooltip.text(\"diagnosis range: \" + data[d.groupIndex].diagnosis + \" | \" + d.total + \" , \" + d.units + \"%\");\n    //     tooltip.style(\"visibility\", \"visible\");\n    // })\n    // .on(\"mousemove\", function (event, d) {\n    //     return tooltip.style(\"top\", (event.pageY - 10) + \"px\").style(\"left\", (event.pageX + 10) + \"px\");\n    // })\n    // .on(\"mouseout\", function () { return tooltip.style(\"visibility\", \"hidden\"); });\n\n    var legend = d3l.legendColor().scale(color).shape('circle').orient('vertical').labelOffset(5);\n    svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", \"translate(\" + (width - 10) + \", \" + 10 + \")\").style(\"font-size\", \"12\");\n    svg.select(\".legend\").call(legend);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default WaffleChart;","map":{"version":3,"sources":["/Users/chia/Desktop/USF/senior team/dashboard/src/views/dashboard/DashboardView/WaffleChart.js"],"names":["React","d3","d3l","WaffleChart","Component","constructor","props","removeExistingBars","bind","createBarChart","state","svg","width","height","componentDidMount","size","select","attr","append","setState","componentDidUpdate","midpoint","range","selectAll","remove","dataset","data","selector","arr","forEach","d","values","e","o","diagnosis","age","total","value","push","selectordata","console","log","arr_filtered","filter","output","item","exist","v","i","length","index","indexOf","Object","assign","output_zero","widthSquares","heightSquares","squareSize","squareValue","gap","theData","color","scaleOrdinal","schemeCategory10","sum","units","Math","floor","concat","Array","join","split","map","groupIndex","enter","col","row","text","legend","legendColor","scale","shape","orient","labelOffset","style","call","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport * as d3l from 'd3-svg-legend'\n\nclass WaffleChart extends React.Component {\n    constructor(props) {\n        super(props)\n        this.removeExistingBars = this.removeExistingBars.bind(this);\n        this.createBarChart = this.createBarChart.bind(this)\n        this.state = {\n            svg: null,\n            width: 0,\n            height: 0\n        };\n    }\n\n    componentDidMount() {\n        const width = this.props.size[0]\n        const height = this.props.size[1]\n\n        // var margin = { top: 20, right: 20, bottom: 70, left: 100 },\n        //     width = owidth - margin.left - margin.right,\n        //     height = oheight - margin.top - margin.bottom;\n\n        const svg = d3.select(\"body\").select(\"#wc\").select(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            // .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n        this.setState({ svg, width, height });\n    }\n\n    componentDidUpdate() {\n        this.removeExistingBars();\n        this.createBarChart();\n    }\n\n    midpoint(range) {\n        return range[0] + (range[1] - range[0]) / 2.0;\n    }\n\n    removeExistingBars() {\n        const { svg } = this.state;\n        svg.selectAll(\"*\").remove();\n    }\n\n    createBarChart() {\n        const { svg } = this.state;\n        let { width } = this.state;\n        let { height } = this.state;\n\n        const dataset = this.props.data\n\n        const selector = this.props.selector\n\n        let arr = []\n\n\n        dataset.forEach(function (d) {\n            d.values.forEach(function (e) {\n                let o = {}\n                o.diagnosis = d.diagnosis\n                o.age = e.age\n                o.total = e.value\n                arr.push(o)\n            })\n        });\n\n        let selectordata = [[12, 18], [18, 21], [22, 35], [36, 55], [55, 65], [65, 75], [75, 100]]\n        console.log(\"arr\", arr)\n        console.log(selectordata[selector][0])\n        console.log(selectordata[selector][1])\n        let arr_filtered = arr.filter(function (e) {\n            return e.age >= selectordata[selector][0] && e.age <= selectordata[selector][1];\n        });\n        console.log(arr_filtered)\n        let output = []\n\n        arr_filtered.forEach(function (item) {\n            var exist = output.filter(function (v, i) {\n                return v.diagnosis == item.diagnosis\n            });\n            if (exist.length) {\n                var index = output.indexOf(exist[0]);\n                var total = output[index].total + item.total;\n                Object.assign(output[index], item);\n                output[index].total = total;\n            } else {\n                if (typeof item.value == 'string') {\n                    item.value = [item.value];\n                }\n                output.push(item);\n            }\n        });\n        console.log(\"output\", output)\n        let output_zero = output.filter(function (e) {\n            return e.total != 0;\n        });\n        console.log(\"output2\", output_zero)\n        let data =  output_zero\n\n        // var tooltip = d3.select(\"body\")\n        //     .append(\"div\")\n        //     .style(\"position\", \"absolute\")\n        //     .style(\"z-index\", \"10\")\n        //     .style(\"visibility\", \"hidden\")\n        //     .style(\"color\", \"white\")\n        //     .style(\"padding\", \"8px\")\n        //     .style(\"background-color\", \"rgba(0, 0, 0, 0.75)\")\n        //     .style(\"border-radius\", \"6px\")\n        //     .style(\"font\", \"12px sans-serif\")\n        //     .text(\"tooltip\");\n\n        console.log(\"the incoming data\", data)\n        var total = 0;\n        var\n            widthSquares = 20,\n            heightSquares = 5,\n            squareSize = 25,\n            squareValue = 0,\n            gap = 1,\n            theData = [];\n\n        var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n        //total\n        total = d3.sum(data, function (d) { return d.total; });\n\n        //value of a square\n        squareValue = total / (widthSquares * heightSquares);\n\n        //remap data\n        data.forEach(function (d, i) {\n\n            console.log(\"dataeach\", d)\n            console.log(\"index\", i)\n            d.total = +d.total;\n            // d.units = (Math.floor(d.total / squareValue)) < 1 ? 1 : (Math.floor(d.total / squareValue));\n            d.units = (Math.floor(d.total / squareValue));\n            theData = theData.concat(\n                Array(d.units + 1).join(1).split('').map(function () {\n                    return {\n\n                        squareValue: squareValue,\n                        units: d.units,\n                        total: d.total,\n                        groupIndex: i\n\n                    };\n                })\n            );\n        });\n\n        width = (squareSize * widthSquares) + widthSquares * gap + 25;\n        height = (squareSize * heightSquares) + heightSquares * gap + 25;\n        console.log(\"end\")\n        console.log(theData)\n        svg.append(\"g\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .selectAll(\"div\")\n            .data(theData)\n            .enter()\n            .append(\"rect\")\n            .attr(\"width\", squareSize)\n            .attr(\"height\", squareSize)\n            .attr(\"fill\", function (d) {\n                { console.log(d) }\n                return color(data[d.groupIndex].diagnosis);\n            })\n            .attr(\"x\", function (d, i) {\n                //group n squares for column\n                let col = Math.floor(i / heightSquares);\n                return (col * squareSize) + (col * gap);\n            })\n            .attr(\"y\", function (d, i) {\n                let row = i % heightSquares;\n                return (heightSquares * squareSize) - ((row * squareSize) + (row * gap))\n            })\n            .append(\"title\")\n            .text(function (d, i) {\n                return \"diagnosis range: \" + data[d.groupIndex].diagnosis + \" | \" + d.total + \" , \" + d.units + \"%\"\n            })\n            // .on(\"mouseover\", function (d) {\n            //     tooltip.text(\"diagnosis range: \" + data[d.groupIndex].diagnosis + \" | \" + d.total + \" , \" + d.units + \"%\");\n            //     tooltip.style(\"visibility\", \"visible\");\n            // })\n            // .on(\"mousemove\", function (event, d) {\n            //     return tooltip.style(\"top\", (event.pageY - 10) + \"px\").style(\"left\", (event.pageX + 10) + \"px\");\n            // })\n            // .on(\"mouseout\", function () { return tooltip.style(\"visibility\", \"hidden\"); });\n\n        var legend = d3l.legendColor()\n            .scale(color)\n            .shape('circle')\n            .orient('vertical')\n            .labelOffset(5)\n\n\n        svg.append(\"g\")\n            .attr(\"class\", \"legend\")\n            .attr(\"transform\", \"translate(\" + (width - 10) + \", \" + 10 + \")\")\n            .style(\"font-size\", \"12\")\n\n        svg.select(\".legend\")\n            .call(legend);\n\n    }\n\n\n\n    render() {\n        return (\n            <svg />\n        )\n    }\n\n}\n\nexport default WaffleChart;\n"]},"metadata":{},"sourceType":"module"}