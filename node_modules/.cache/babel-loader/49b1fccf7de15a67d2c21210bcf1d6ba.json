{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/ScatterPlot.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ScatterPlot = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const data = {\n    datasets: [{\n      backgroundColor: colors.pink[500],\n      data: [297, 689, 539, 22],\n      label: 'Female'\n    }, {\n      backgroundColor: colors.blue[200],\n      data: [481, 877, 645, 56],\n      label: 'Male'\n    }],\n    labels: ['Chest Pain', 'Pneumonia', 'Sepsis', 'Trauma']\n  };\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: {\n      padding: 0\n    },\n    legend: {\n      display: true\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [{\n        barThickness: 12,\n        maxBarThickness: 40,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5,\n        ticks: {\n          fontColor: theme.palette.text.secondary\n        },\n        gridLines: {\n          display: false,\n          drawBorder: false\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          fontColor: theme.palette.text.secondary,\n          beginAtZero: true,\n          min: 0\n        },\n        gridLines: {\n          borderDash: [2],\n          borderDashOffset: [2],\n          color: theme.palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [2],\n          zeroLineBorderDashOffset: [2],\n          zeroLineColor: theme.palette.divider\n        }\n      }]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(Button, {\n      endIcon: /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 34\n        }\n      }),\n      size: \"small\",\n      variant: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"2001-2002\"),\n    title: \"ICU Diseases discovered by Gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    height: 400,\n    position: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }));\n};\n\nScatterPlot.propTypes = {\n  className: PropTypes.string\n};\nexport default ScatterPlot;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/ScatterPlot.js"],"names":["React","clsx","PropTypes","Bar","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","ArrowDropDownIcon","ArrowRightIcon","useStyles","root","ScatterPlot","className","rest","classes","theme","data","datasets","backgroundColor","pink","label","blue","labels","options","animation","cornerRadius","layout","padding","legend","display","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","palette","text","secondary","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","color","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","background","default","bodyFontColor","borderColor","borderWidth","enabled","footerFontColor","intersect","mode","titleFontColor","primary","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    useTheme,\n    makeStyles,\n    colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nconst ScatterPlot = ({className, ...rest }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const data = {\n      datasets: [\n        {\n          backgroundColor: colors.pink[500],\n          data: [297, 689, 539, 22],\n          label: 'Female'\n        },\n        {\n          backgroundColor: colors.blue[200],\n          data: [481, 877,645, 56],\n          label: 'Male'\n        }\n      ],\n      labels: ['Chest Pain', 'Pneumonia', 'Sepsis', 'Trauma']\n    };\n\n    const options = {\n        animation: false,\n        cornerRadius: 20,\n        layout: { padding: 0 },\n        legend: { display: true },\n        maintainAspectRatio: false,\n        responsive: true,\n        scales: {\n            xAxes: [\n                {\n                    barThickness: 12,\n                    maxBarThickness: 40,\n                    barPercentage: 0.5,\n                    categoryPercentage: 0.5,\n                    ticks: {\n                        fontColor: theme.palette.text.secondary\n                    },\n                    gridLines: {\n                        display: false,\n                        drawBorder: false\n                    }\n                }\n            ],\n            yAxes: [\n                {\n                    ticks: {\n                        fontColor: theme.palette.text.secondary,\n                        beginAtZero: true,\n                        min: 0\n                    },\n                    gridLines: {\n                        borderDash: [2],\n                        borderDashOffset: [2],\n                        color: theme.palette.divider,\n                        drawBorder: false,\n                        zeroLineBorderDash: [2],\n                        zeroLineBorderDashOffset: [2],\n                        zeroLineColor: theme.palette.divider\n                    }\n                }\n            ]\n        },\n        tooltips: {\n            backgroundColor: theme.palette.background.default,\n            bodyFontColor: theme.palette.text.secondary,\n            borderColor: theme.palette.divider,\n            borderWidth: 1,\n            enabled: true,\n            footerFontColor: theme.palette.text.secondary,\n            intersect: false,\n            mode: 'index',\n            titleFontColor: theme.palette.text.primary\n        }\n    };\n\n    return (\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardHeader\n                action={(\n                    <Button\n                        endIcon={<ArrowDropDownIcon />}\n                        size=\"small\"\n                        variant=\"text\"\n                    >\n                        2001-2002\n                    </Button>\n                )}\n                title=\"ICU Diseases discovered by Gender\"\n            />\n            <Divider />\n            <CardContent>\n                <Box\n                    height={400}\n                    position=\"relative\"\n                >\n                    <Bar\n                        data={data}\n                        options={options}\n                    />\n                </Box>\n            </CardContent>\n            <Divider />\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                p={2}\n            >\n                {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button> */}\n            </Box>\n        </Card>\n    );\n};\n\nScatterPlot.propTypes = {\n    className: PropTypes.string\n};\n\nexport default ScatterPlot;\n"]},"metadata":{},"sourceType":"module"}