{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/ScatterPlot.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ScatterPlot = ({\n  dataset,\n  selector,\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const data = {\n    type: 'line',\n    data: {\n      datasets: [{\n        data: [{\n          id: 'Sales',\n          nested: {\n            value: 1500\n          }\n        }, {\n          id: 'Purchases',\n          nested: {\n            value: 500\n          }\n        }]\n      }]\n    },\n    options: {\n      parsing: {\n        xAxisKey: 'id',\n        yAxisKey: 'nested.value'\n      }\n    }\n  };\n  const cfg = {\n    type: 'line',\n    data: {\n      datasets: [{\n        label: 'Net sales',\n        data: data,\n        parsing: {\n          xAxisKey: 'age'\n        }\n      }, {\n        label: 'Cost of goods sold',\n        data: data,\n        parsing: {\n          yAxisKey: 'distribution'\n        }\n      }]\n    }\n  };\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: {\n      padding: 0\n    },\n    legend: {\n      display: true\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Age'\n        }\n      }],\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Distribution'\n        }\n      }]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n  return /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  });\n};\n\nScatterPlot.propTypes = {\n  className: PropTypes.string\n};\nexport default ScatterPlot;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/ScatterPlot.js"],"names":["React","clsx","PropTypes","Line","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","ArrowDropDownIcon","ArrowRightIcon","useStyles","root","ScatterPlot","dataset","selector","className","rest","classes","theme","data","type","datasets","id","nested","value","options","parsing","xAxisKey","yAxisKey","cfg","label","animation","cornerRadius","layout","padding","legend","display","maintainAspectRatio","responsive","scales","xAxes","scaleLabel","labelString","yAxes","tooltips","backgroundColor","palette","background","default","bodyFontColor","text","secondary","borderColor","divider","borderWidth","enabled","footerFontColor","intersect","mode","titleFontColor","primary","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    useTheme,\n    makeStyles,\n    colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nconst ScatterPlot = ({dataset, selector,className, ...rest }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const data = {\n        type: 'line',\n        data: {\n            datasets: [{\n                data: [{ id: 'Sales', nested: { value: 1500 } }, { id: 'Purchases', nested: { value: 500 } }]\n            }]\n        },\n        options: {\n            parsing: {\n                xAxisKey: 'id',\n                yAxisKey: 'nested.value'\n            }\n        }\n    }\n    const cfg = {\n        type: 'line',\n        data: {\n            datasets: [{\n                label: 'Net sales',\n                data: data,\n                parsing: {\n                    xAxisKey: 'age'\n                }\n            }, {\n                label: 'Cost of goods sold',\n                data: data,\n                parsing: {\n                    yAxisKey: 'distribution'\n                }\n            }]\n        },\n    }\n    const options = {\n        animation: false,\n        cornerRadius: 20,\n        layout: { padding: 0 },\n        legend: { display: true },\n        maintainAspectRatio: false,\n        responsive: true,\n        scales: {\n            xAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Age'\n                }\n            }],\n            yAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Distribution'\n                }\n            }]\n        },\n        tooltips: {\n            backgroundColor: theme.palette.background.default,\n            bodyFontColor: theme.palette.text.secondary,\n            borderColor: theme.palette.divider,\n            borderWidth: 1,\n            enabled: true,\n            footerFontColor: theme.palette.text.secondary,\n            intersect: false,\n            mode: 'index',\n            titleFontColor: theme.palette.text.primary\n        }\n    };\n\n    return (\n\n                    <Line\n                        data={data}\n                        options={options}\n                    />\n\n    );\n};\n\nScatterPlot.propTypes = {\n    className: PropTypes.string\n};\n\nexport default ScatterPlot;\n"]},"metadata":{},"sourceType":"module"}