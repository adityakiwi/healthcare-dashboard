{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesStackedBarChart.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport ScatterPlot from './ScatterPlot';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ParallelCoordinates from './ParallelCoordinates';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction stackedbarP(dataset) {\n  console.log(\"localdata\", dataset);\n  let arr = [];\n\n  for (var i = 0; i < dataset.length; i++) {\n    for (var j = 0; j < dataset[i].values.length; j++) {\n      let o = {};\n      let diagnosis = dataset[i].diagnosis;\n      let distribution = dataset[i].values[j].distribution;\n      let dist = dataset[i].values[j].distribution;\n      let raw = dist.split(\"(\")[1];\n      let bare = dist.split(\"(\")[0];\n      let key = bare.trim();\n      let gender = raw.split(\")\")[0];\n      let value = dataset[i].values[j].value;\n      o.gender = gender;\n      o.disease = diagnosis;\n      o.total = value;\n      o[key] = value;\n      arr.push(o);\n    }\n  }\n\n  console.log(arr);\n  let output = [];\n  data.forEach(function (item) {\n    console.log(\"each item\", item);\n    var exist = output.filter(function (v, i) {\n      return v.disease == item.disease;\n    });\n    console.log(\"exist\", exist);\n\n    if (exist.length) {\n      var index = output.indexOf(exist[0]);\n      var total = output[index].total + item.total;\n      console.log(\"index\", index);\n      console.log(\"total\", total);\n      Object.assign(output[index], item);\n      output[index].total = total;\n    } else {\n      if (typeof item.value == 'string') {\n        console.log(\"string\", item.value);\n        item.value = [item.value];\n      }\n\n      console.log(\"item\", item);\n      output.push(item);\n    }\n  });\n  output.sort(function (a, b) {\n    return b.total - a.total;\n  });\n}\n\nconst DiagnosesStackedBarChart = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let [loading, setLoading] = React.useState(true);\n  let [data, setData] = React.useState([]);\n  const [check, setCheck] = React.useState({\n    a: true,\n    b: true,\n    c: true,\n    d: true\n  });\n  React.useEffect(() => {\n    let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/insurance/gender';\n    let apiUrl2 = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/insurance/language'; // fetch(apiUrl)\n    //     .then((response) => response.json())\n    //     .then(result => pcv1data(result))\n    //     .then(result => {\n    //         setData(result);\n    //     })\n\n    fetch(apiUrl2).then(response => response.json()).then(result => stackedbarP(result)).then(result => {\n      setData(data.concat(result));\n      setLoading(false);\n    });\n  }, []);\n  console.log(data);\n\n  const handleChange = event => {\n    setCheck(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: check.checkedA,\n        onChange: handleChange,\n        name: \"checkedA\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 34\n        }\n      }),\n      label: \"Secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }),\n    title: \"Parallel Coordinates\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    id: \"pc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(ParallelCoordinates, {\n    data: data,\n    size: [800, 800],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 85\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }));\n};\n\nDiagnosesStackedBarChart.propTypes = {\n  className: PropTypes.string\n};\nexport default DiagnosesStackedBarChart;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesStackedBarChart.js"],"names":["React","clsx","PropTypes","ScatterPlot","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","ArrowDropDownIcon","ArrowRightIcon","CircularProgress","Select","MenuItem","FormControlLabel","Checkbox","ParallelCoordinates","useStyles","root","stackedbarP","dataset","console","log","arr","i","length","j","values","o","diagnosis","distribution","dist","raw","split","bare","key","trim","gender","value","disease","total","push","output","data","forEach","item","exist","filter","v","index","indexOf","Object","assign","sort","a","b","DiagnosesStackedBarChart","className","rest","classes","theme","loading","setLoading","useState","setData","check","setCheck","c","d","useEffect","apiUrl","apiUrl2","fetch","then","response","json","result","concat","handleChange","event","target","checkedA","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport ScatterPlot from './ScatterPlot';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    useTheme,\n    makeStyles,\n    colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ParallelCoordinates from './ParallelCoordinates'\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nfunction stackedbarP(dataset) {\n    console.log(\"localdata\", dataset)\n    let arr = []\n    for (var i = 0; i < dataset.length; i++) {\n        for (var j = 0; j < dataset[i].values.length; j++) {\n            let o = {}\n            let diagnosis = dataset[i].diagnosis\n            let distribution = dataset[i].values[j].distribution\n            let dist = dataset[i].values[j].distribution\n            let raw = dist.split(\"(\")[1]\n            let bare = dist.split(\"(\")[0]\n            let key = bare.trim()\n            let gender = raw.split(\")\")[0]\n            let value = dataset[i].values[j].value\n            o.gender = gender\n            o.disease = diagnosis\n            o.total = value;\n            o[key] = value\n            arr.push(o)\n        }\n    }\n    console.log(arr)\n\n\n    let output = []\n\n    data.forEach(function (item) {\n        console.log(\"each item\", item)\n        var exist = output.filter(function (v, i) {\n            return v.disease == item.disease\n        });\n        console.log(\"exist\", exist)\n        if (exist.length) {\n            var index = output.indexOf(exist[0]);\n            var total = output[index].total + item.total;\n            console.log(\"index\", index)\n            console.log(\"total\", total)\n            Object.assign(output[index], item);\n            output[index].total = total;\n        } else {\n            if (typeof item.value == 'string') {\n                console.log(\"string\", item.value)\n                item.value = [item.value];\n            }\n            console.log(\"item\", item)\n            output.push(item);\n        }\n    });\n    output.sort(function (a, b) { return b.total - a.total; });\n\n    \n}\nconst DiagnosesStackedBarChart = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    let [loading, setLoading] = React.useState(true);\n    let [data, setData] = React.useState([]);\n    const [check, setCheck] = React.useState({\n        a: true,\n        b: true,\n        c: true,\n        d: true,\n    });\n\n    React.useEffect(() => {\n        let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/insurance/gender';\n        let apiUrl2 = 'https://visualizing-healthcare-data.wm.r.appspot.com/data/insurance/language';\n        // fetch(apiUrl)\n        //     .then((response) => response.json())\n        //     .then(result => pcv1data(result))\n        //     .then(result => {\n        //         setData(result);\n        //     })\n        fetch(apiUrl2)\n            .then((response) => response.json())\n            .then(result => stackedbarP(result))\n            .then(result => {\n                setData(data.concat(result));\n                setLoading(false);\n            })\n    }, [])\n    console.log(data)\n\n    const handleChange = (event) => {\n        setCheck(event.target.value);\n    };\n\n    return (\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardHeader\n                action={(\n                    <FormControlLabel\n                        control={<Checkbox checked={check.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                        label=\"Secondary\"\n                    />\n                )}\n                title=\"Parallel Coordinates\"\n            />\n            <Divider />\n            <CardContent id={\"pc\"}>\n                {/* <Box\n          id={\"gbc\"}\n          height={400}\n          position=\"relative\"\n        > */}\n                {!loading ? <ParallelCoordinates data={data} size={[800, 800]} /> : <CircularProgress />}\n                {/* </Box> */}\n            </CardContent>\n            <Divider />\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                p={2}\n            >\n                {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button> */}\n            </Box>\n        </Card>\n    );\n};\n\nDiagnosesStackedBarChart.propTypes = {\n    className: PropTypes.string\n};\n\nexport default DiagnosesStackedBarChart;\n"]},"metadata":{},"sourceType":"module"}