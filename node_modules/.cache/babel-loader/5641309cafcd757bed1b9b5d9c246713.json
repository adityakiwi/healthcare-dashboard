{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesStackedBarChart.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport GroupedBarChart from './GroupedBarChart';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors, CardActions } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport StackedBarChart from './StackedBarChart';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst DiagnosesStackedBarChart = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let [loading, setLoading] = React.useState(true);\n  let [data, setData] = React.useState([]);\n  let [selector, setSelector] = React.useState('gender');\n  let [scale, setScale] = React.useState({\n    logarithmic: false\n  });\n  console.log(selector);\n  React.useEffect(() => {\n    let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/diagnosis_dist/' + selector + '/';\n    fetch(apiUrl).then(response => response.json()).then(result => {\n      setData(result);\n      setLoading(false);\n    });\n  }, [selector, scale]);\n  console.log(data);\n\n  const handleCategory = event => {\n    setLoading(true);\n    setSelector(event.target.value);\n  };\n\n  const handleScale = event => {\n    setScale({ ...scale,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(Select, {\n      endIcon: /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }\n      }),\n      value: selector,\n      onChange: handleCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"M\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Male\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"F\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Female\")),\n    title: \"Stacked Bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    id: \"sb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(StackedBarChart, {\n    data: data,\n    selector: selector,\n    scale: scale,\n    size: [1200, 800],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 116\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }));\n};\n\nDiagnosesStackedBarChart.propTypes = {\n  className: PropTypes.string\n};\nexport default DiagnosesStackedBarChart;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesStackedBarChart.js"],"names":["React","clsx","PropTypes","GroupedBarChart","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","CardActions","ArrowDropDownIcon","ArrowRightIcon","CircularProgress","Select","MenuItem","FormControlLabel","Switch","StackedBarChart","useStyles","root","DiagnosesStackedBarChart","className","rest","classes","theme","loading","setLoading","useState","data","setData","selector","setSelector","scale","setScale","logarithmic","console","log","useEffect","apiUrl","fetch","then","response","json","result","handleCategory","event","target","value","handleScale","name","checked","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACIC,GADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,WAJJ,EAKIC,UALJ,EAMIC,OANJ,EAOIC,QAPJ,EAQIC,UARJ,EASIC,MATJ,EAUIC,WAVJ,QAWO,mBAXP;AAYA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,SAAS,GAAGX,UAAU,CAAC,OAAO;AAChCY,EAAAA,IAAI,EAAE;AAD0B,CAAP,CAAD,CAA5B;;AAIA,MAAMC,wBAAwB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAA4B;AACzD,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAMM,KAAK,GAAGlB,QAAQ,EAAtB;AAEA,MAAI,CAACmB,OAAD,EAAUC,UAAV,IAAwB9B,KAAK,CAAC+B,QAAN,CAAe,IAAf,CAA5B;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBjC,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAAtB;AACA,MAAI,CAACG,QAAD,EAAWC,WAAX,IAA0BnC,KAAK,CAAC+B,QAAN,CAAe,QAAf,CAA9B;AACA,MAAI,CAACK,KAAD,EAAQC,QAAR,IAAoBrC,KAAK,CAAC+B,QAAN,CAAe;AACnCO,IAAAA,WAAW,EAAE;AADsB,GAAf,CAAxB;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAlC,EAAAA,KAAK,CAACyC,SAAN,CAAgB,MAAM;AAClB,QAAIC,MAAM,GAAG,yEAAyER,QAAzE,GAAoF,GAAjG;AACAS,IAAAA,KAAK,CAACD,MAAD,CAAL,CACKE,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZd,MAAAA,OAAO,CAACc,MAAD,CAAP;AACAjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KALL;AAMH,GARD,EAQG,CAACI,QAAD,EAAWE,KAAX,CARH;AASAG,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AAEA,QAAMgB,cAAc,GAAIC,KAAD,IAAW;AAC9BnB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,IAAAA,WAAW,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACH,GAHD;;AAKA,QAAMC,WAAW,GAAIH,KAAD,IAAW;AAC3BZ,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACa,KAAK,CAACC,MAAN,CAAaG,IAAd,GAAqBJ,KAAK,CAACC,MAAN,CAAaI;AAA9C,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAErD,IAAI,CAAC0B,OAAO,CAACJ,IAAT,EAAeE,SAAf;AADnB,KAEQC,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAII,oBAAC,UAAD;AACI,IAAA,MAAM,eACF,oBAAC,MAAD;AACI,MAAA,OAAO,eAAE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADb;AAEI,MAAA,KAAK,EAAEQ,QAFX;AAGI,MAAA,QAAQ,EAAEc,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CAFR;AAWI,IAAA,KAAK,EAAC,aAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAiBI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,eAkBI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMK,CAACnB,OAAD,gBAAW,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEG,IAAvB;AAA6B,IAAA,QAAQ,EAAEE,QAAvC;AAAiD,IAAA,KAAK,EAAEE,KAAxD;AAA+D,IAAA,IAAI,EAAE,CAAC,IAAD,EAAO,GAAP,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,gBAAkG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANvG,CAlBJ,eA2BI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,eA4BI,oBAAC,GAAD;AACI,IAAA,OAAO,EAAC,MADZ;AAEI,IAAA,cAAc,EAAC,UAFnB;AAGI,IAAA,CAAC,EAAE,CAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,CADJ;AA6CH,CA7ED;;AA+EAZ,wBAAwB,CAAC+B,SAAzB,GAAqC;AACjC9B,EAAAA,SAAS,EAAEvB,SAAS,CAACsD;AADY,CAArC;AAIA,eAAehC,wBAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport GroupedBarChart from './GroupedBarChart';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    useTheme,\n    makeStyles,\n    colors,\n    CardActions\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport StackedBarChart from './StackedBarChart'\n\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nconst DiagnosesStackedBarChart = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    let [loading, setLoading] = React.useState(true);\n    let [data, setData] = React.useState([]);\n    let [selector, setSelector] = React.useState('gender');\n    let [scale, setScale] = React.useState({\n        logarithmic: false,\n    });\n\n    console.log(selector)\n    React.useEffect(() => {\n        let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/diagnosis_dist/' + selector + '/';\n        fetch(apiUrl)\n            .then((response) => response.json())\n            .then(result => {\n                setData(result);\n                setLoading(false);\n            })\n    }, [selector, scale])\n    console.log(data)\n\n    const handleCategory = (event) => {\n        setLoading(true)\n        setSelector(event.target.value);\n    };\n\n    const handleScale = (event) => {\n        setScale({ ...scale, [event.target.name]: event.target.checked });\n    };\n\n    return (\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardHeader\n                action={(\n                    <Select\n                        endIcon={<ArrowDropDownIcon />}\n                        value={selector}\n                        onChange={handleCategory}\n                    >\n                        <MenuItem value={\"M\"}>Male</MenuItem>\n                        <MenuItem value={\"F\"}>Female</MenuItem>\n                    </Select>\n                )}\n                title=\"Stacked Bar\"\n            />\n            <Divider />\n            <CardContent id={\"sb\"}>\n                {/* <Box\n          id={\"gbc\"}\n          height={400}\n          position=\"relative\"\n        > */}\n                {!loading ? <StackedBarChart data={data} selector={selector} scale={scale} size={[1200, 800]} /> : <CircularProgress />}\n                {/* </Box> */}\n            </CardContent>\n            <Divider />\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                p={2}\n            >\n                {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button> */}\n            </Box>\n        </Card>\n    );\n};\n\nDiagnosesStackedBarChart.propTypes = {\n    className: PropTypes.string\n};\n\nexport default DiagnosesStackedBarChart;\n"]},"metadata":{},"sourceType":"module"}