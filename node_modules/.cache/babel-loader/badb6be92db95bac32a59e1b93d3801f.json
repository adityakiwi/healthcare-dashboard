{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesStackedBarChart.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport GroupedBarChart from './GroupedBarChart';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, makeStyles, colors, CardActions } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport StackedBarChart from './StackedBarChart';\nimport { LocalConvenienceStoreOutlined } from '@material-ui/icons';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction stackedbarP(dataset, selector) {\n  console.log(\"localdata\", dataset);\n  let arr = [];\n\n  for (var i = 0; i < dataset.length; i++) {\n    for (var j = 0; j < dataset[i].values.length; j++) {\n      let o = {};\n      let diagnosis = dataset[i].diagnosis;\n      let distribution = dataset[i].values[j].distribution;\n      let dist = dataset[i].values[j].distribution;\n      let raw = dist.split(\"(\")[1];\n      let bare = dist.split(\"(\")[0];\n      let key = bare.trim();\n      let gender = raw.split(\")\")[0];\n      let value = dataset[i].values[j].value;\n      o.gender = gender;\n      o.disease = diagnosis;\n      o.total = value;\n      o[key] = value;\n      arr.push(o);\n    }\n  }\n\n  console.log(arr, \"arr\");\n  console.log(selector, \"selector\");\n  let arr_filtered = arr.filter(function (e) {\n    return e.gender === selector;\n  });\n  let output = [];\n  arr_filtered.forEach(function (item) {\n    var exist = output.filter(function (v, i) {\n      return v.disease == item.disease;\n    });\n    console.log(\"exist\", exist);\n\n    if (exist.length) {\n      var index = output.indexOf(exist[0]);\n      var total = output[index].total + item.total;\n      console.log(\"index\", index);\n      console.log(\"total\", total);\n      Object.assign(output[index], item);\n      output[index].total = total;\n    } else {\n      if (typeof item.value == 'string') {\n        console.log(\"string\", item.value);\n        item.value = [item.value];\n      }\n\n      console.log(\"item\", item);\n      output.push(item);\n    }\n  });\n  output.sort(function (a, b) {\n    return b.total - a.total;\n  });\n  console.log(\"output\", output);\n  return output;\n}\n\nconst DiagnosesStackedBarChart = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let [loading, setLoading] = React.useState(true);\n  let [data, setData] = React.useState([]);\n  let [selector, setSelector] = React.useState('M');\n  let [url, setURL] = React.useState('gender');\n  let [scale, setScale] = React.useState({\n    logarithmic: false\n  });\n  console.log(selector);\n  React.useEffect(() => {\n    let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/insurance/' + url + '/';\n    fetch(apiUrl).then(response => response.json()).then(result => stackedbarP(result, selector)).then(result => {\n      setData(result);\n      setLoading(false);\n    });\n  }, [selector]);\n  console.log(data);\n\n  const handleCategory = event => {\n    setLoading(true);\n\n    if (event == 'M' | event == 'F') {\n      setURL('gender');\n    } else if (event == 'M' | event == 'F') {\n      setURL('language');\n    }\n\n    setSelector(event.target.value);\n  }; // const handleScale = (event) => {\n  //     setScale({ ...scale, [event.target.name]: event.target.checked });\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(Select, {\n      endIcon: /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 34\n        }\n      }),\n      value: selector,\n      onChange: handleCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"M\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, \"Male\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"F\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, \"Female\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"English\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"English\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"Non-English\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, \"Female\")),\n    title: \"Q5 Insurance Stacked Bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    id: \"sb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(StackedBarChart, {\n    data: data,\n    selector: selector,\n    scale: scale,\n    size: [850, 500],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 115\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }));\n};\n\nDiagnosesStackedBarChart.propTypes = {\n  className: PropTypes.string\n};\nexport default DiagnosesStackedBarChart;","map":{"version":3,"sources":["/Users/aditya/Dropbox/Senior S1/ST/dashboard/src/views/dashboard/DashboardView/DiagnosesStackedBarChart.js"],"names":["React","clsx","PropTypes","GroupedBarChart","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","makeStyles","colors","CardActions","ArrowDropDownIcon","ArrowRightIcon","CircularProgress","Select","MenuItem","FormControlLabel","Switch","StackedBarChart","LocalConvenienceStoreOutlined","useStyles","root","stackedbarP","dataset","selector","console","log","arr","i","length","j","values","o","diagnosis","distribution","dist","raw","split","bare","key","trim","gender","value","disease","total","push","arr_filtered","filter","e","output","forEach","item","exist","v","index","indexOf","Object","assign","sort","a","b","DiagnosesStackedBarChart","className","rest","classes","theme","loading","setLoading","useState","data","setData","setSelector","url","setURL","scale","setScale","logarithmic","useEffect","apiUrl","fetch","then","response","json","result","handleCategory","event","target","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport GroupedBarChart from './GroupedBarChart';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    useTheme,\n    makeStyles,\n    colors,\n    CardActions\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport StackedBarChart from './StackedBarChart'\nimport { LocalConvenienceStoreOutlined } from '@material-ui/icons';\n\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nfunction stackedbarP(dataset, selector) {\n    console.log(\"localdata\", dataset)\n    let arr = []\n    for (var i = 0; i < dataset.length; i++) {\n        for (var j = 0; j < dataset[i].values.length; j++) {\n            let o = {}\n            let diagnosis = dataset[i].diagnosis\n            let distribution = dataset[i].values[j].distribution\n            let dist = dataset[i].values[j].distribution\n            let raw = dist.split(\"(\")[1]\n            let bare = dist.split(\"(\")[0]\n            let key = bare.trim()\n            let gender = raw.split(\")\")[0]\n            let value = dataset[i].values[j].value\n            o.gender = gender\n            o.disease = diagnosis\n            o.total = value;\n            o[key] = value\n            arr.push(o)\n        }\n    }\n    console.log(arr,\"arr\")\n    console.log(selector,\"selector\")\n    let arr_filtered = arr.filter(function (e) {\n        return e.gender === selector;\n    });\n\n    let output = []\n    arr_filtered.forEach(function (item) {\n        var exist = output.filter(function (v, i) {\n            return v.disease == item.disease\n        });\n        console.log(\"exist\", exist)\n        if (exist.length) {\n            var index = output.indexOf(exist[0]);\n            var total = output[index].total + item.total;\n            console.log(\"index\", index)\n            console.log(\"total\", total)\n            Object.assign(output[index], item);\n            output[index].total = total;\n        } else {\n            if (typeof item.value == 'string') {\n                console.log(\"string\", item.value)\n                item.value = [item.value];\n            }\n            console.log(\"item\", item)\n            output.push(item);\n        }\n    });\n    output.sort(function (a, b) { return b.total - a.total; });\n    console.log(\"output\",output)\n    return output\n}\n\nconst DiagnosesStackedBarChart = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    let [loading, setLoading] = React.useState(true);\n    let [data, setData] = React.useState([]);\n    let [selector, setSelector] = React.useState('M');\n    let [url, setURL] = React.useState('gender');\n    let [scale, setScale] = React.useState({\n        logarithmic: false,\n    });\n\n    console.log(selector)\n    React.useEffect(() => {\n        let apiUrl = 'https://visualizing-healthcare-data.wm.r.appspot.com/insurance/' + url + '/';\n        fetch(apiUrl)\n            .then((response) => response.json())\n            .then(result => stackedbarP(result,selector))\n            .then(result => {\n                setData(result);\n                setLoading(false);\n            })\n    }, [selector])\n    console.log(data)\n\n    const handleCategory = (event) => {\n        setLoading(true)\n        if (event == 'M'  | event == 'F')\n        {\n            setURL('gender')   \n        }\n        else if (event == 'M' | event == 'F')\n        {\n            setURL('language')\n        }\n        setSelector(event.target.value);\n    };\n\n    // const handleScale = (event) => {\n    //     setScale({ ...scale, [event.target.name]: event.target.checked });\n    // };\n\n    return (\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardHeader\n                action={(\n                    <Select\n                        endIcon={<ArrowDropDownIcon />}\n                        value={selector}\n                        onChange={handleCategory}\n                    >\n                        <MenuItem value={\"M\"}>Male</MenuItem>\n                        <MenuItem value={\"F\"}>Female</MenuItem>\n                        <MenuItem value={\"English\"}>English</MenuItem>\n                        <MenuItem value={\"Non-English\"}>Female</MenuItem>\n                    </Select>\n                )}\n                title=\"Q5 Insurance Stacked Bar\"\n            />\n            <Divider />\n            <CardContent id={\"sb\"}>\n                {/* <Box\n          id={\"gbc\"}\n          height={400}\n          position=\"relative\"\n        > */}\n                {!loading ? <StackedBarChart data={data} selector={selector} scale={scale} size={[850, 500]} /> : <CircularProgress />}\n                {/* </Box> */}\n            </CardContent>\n            <Divider />\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                p={2}\n            >\n                {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button> */}\n            </Box>\n        </Card>\n    );\n};\n\nDiagnosesStackedBarChart.propTypes = {\n    className: PropTypes.string\n};\n\nexport default DiagnosesStackedBarChart;\n"]},"metadata":{},"sourceType":"module"}